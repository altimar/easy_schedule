{"version":3,"sources":["components/Label.tsx","components/Entry.tsx","components/EntryList.tsx","components/ListInput.tsx","components/Button.tsx","components/EntryModal.tsx","store/types.ts","App.tsx","store/actions.ts","store/reducers/entries.ts","store/reducers/index.ts","store/demo.ts","index.tsx"],"names":["classNames","require","Label","props","classes","this","editable","className","title","onClick","onClose","Component","Entry","participants","map","participant","EntryList","entries","entry","onSelect","id","ListInput","onParticipantEdit","event","value","target","trim","key","newValues","state","values","setState","onChange","onParticipantClose","index","Object","assign","splice","type","onKeyPress","Button","size","children","EntryModal","onTitleChangeHandler","onParticipantsChange","onCloseClick","onCancel","onSaveClick","onSave","onDeleteClick","onDelete","ADD_ENTRY","UPDATE_ENTRY","DELETE_ENTRY","mapDispatch","addEntry","updateEntry","deleteEntry","connector","connect","schedule","onEntrySelect","i","length","is_modal","edited_entry","onModalCancel","onModalSave","onModalDelete","onAddButtonClick","newProps","initialState","combineReducers","action","newState","filter","female_first_names","male_first_names","last_names","getRandomLastName","Math","floor","random","getRandomScheduleEntry","min_participant","max_participant","j","push","entries_count","store","createStore","rootReducer","toString","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kYAEIA,G,wBAAaC,EAAQ,KAQJC,E,kDACnB,WAAYC,GAAqB,uCACzBA,G,qDAIN,IAAMC,EAAUJ,EAAW,CACzBE,OAAO,EACP,iBAAkBG,KAAKF,MAAMG,WAE/B,OACE,sBAAKC,UAAWH,EAAhB,UACGC,KAAKF,MAAMK,MACXH,KAAKF,MAAMG,UACV,wBAAQC,UAAU,cAAcE,QAASJ,KAAKF,MAAMO,iB,GAd3BC,aCAdC,E,kDACnB,WAAYT,GAAgB,uCACpBA,G,qDAIN,OACE,sBAAKI,UAAU,QAAQE,QAASJ,KAAKF,MAAMM,QAA3C,UACE,qBAAKF,UAAU,cAAf,SAA8BF,KAAKF,MAAMK,QACzC,qBAAKD,UAAU,yBAAf,SAEEF,KAAKF,MAAMU,cAAgBR,KAAKF,MAAMU,aAAaC,KAAI,SAAAC,GACrD,OAAO,cAAC,EAAD,CAAOP,MAAOO,GAAkB,eAAeA,e,GAZ/BJ,aCAdK,E,uKACT,IAAD,OACP,OACE,qBAAKT,UAAU,YAAf,SAEIF,KAAKF,MAAMc,SAAWZ,KAAKF,MAAMc,QAAQH,KAAI,SAAAI,GAC3C,OAAO,cAAC,EAAD,CACLV,MAAOU,EAAMV,MAEbK,aAAcK,EAAML,aACpBJ,QAAS,kBAAM,EAAKN,MAAMgB,UAAY,EAAKhB,MAAMgB,SAASD,EAAME,MAF3D,SAAWF,EAAMV,gB,GARGG,a,gBCGlBU,G,wDACnB,WAAYlB,GAAyB,IAAD,8BAClC,cAAMA,IAMRmB,kBAAoB,SAACC,GACnB,IAAIC,EAASD,EAAME,OAA4BD,MAAME,OACrD,GAAkB,UAAdH,EAAMI,KAA6B,KAAVH,EAAc,CACzC,IAAII,EAAS,sBAAO,EAAKC,MAAMC,QAAlB,CAA0BN,IACvC,EAAKO,SAAS,CAAED,OAAQF,IACxB,EAAKzB,MAAM6B,UAAY,EAAK7B,MAAM6B,SAASJ,GAC1CL,EAAME,OAA4BD,MAAQ,KAbX,EAiBpCS,mBAAqB,SAACC,GACpB,IAAIN,EAAYO,OAAOC,OAAO,GAAI,EAAKP,MAAMC,QAC7CF,EAAUS,OAAOH,EAAO,GACxB,EAAKH,SAAS,CAAED,OAAQF,IACxB,EAAKzB,MAAM6B,UAAY,EAAK7B,MAAM6B,SAASJ,IAnB3C,EAAKC,MAAQ,CACXC,OAAQK,OAAOC,OAAO,GAAI,EAAKjC,MAAM2B,SAHL,E,qDAwB1B,IAAD,OACP,OACE,sBAAKvB,UAAU,YAAf,UAEIF,KAAKwB,MAAMC,QAAUzB,KAAKwB,MAAMC,OAAOhB,KAAI,SAACU,EAAOU,GACjD,OAAO,cAAC,EAAD,CACL1B,MAAOgB,EAEPlB,UAAU,EACVI,QAAS,kBAAM,EAAKuB,mBAAmBC,KAFlC,SAAWV,MAMtB,uBAAOc,KAAK,OAAOC,WAAYlC,KAAKiB,2B,GAtCLX,cCDlB6B,G,6KAEjB,IAAIpC,EAAU,SAOd,OANIC,KAAKF,MAAMmC,OACblC,GAAW,WAAWC,KAAKF,MAAMmC,MAE/BjC,KAAKF,MAAMsC,OACbrC,GAAW,WAAWC,KAAKF,MAAMsC,MAGjC,wBAAQlC,UAAWH,EAASK,QAASJ,KAAKF,MAAMM,QAAhD,SACGJ,KAAKF,MAAMuC,e,GAXgB/B,cCCfgC,E,kDACnB,WAAYxC,GAAyB,IAAD,8BAClC,cAAMA,IAIRyC,qBAAuB,SAACrB,GACtB,EAAKQ,SAAS,CAAEvB,MAAOe,EAAME,OAAOD,SANF,EASpCqB,qBAAuB,SAACf,GACtB,EAAKC,SAAS,CAAElB,aAAciB,KAVI,EAapCgB,aAAe,WACb,EAAK3C,MAAM4C,UAAY,EAAK5C,MAAM4C,YAdA,EAiBpCC,YAAc,WACZ,EAAK7C,MAAM8C,QAAU,EAAK9C,MAAM8C,OAAO,EAAKpB,QAlBV,EAqBpCqB,cAAgB,WACd,EAAK/C,MAAMgD,UAAY,EAAKhD,MAAMgD,SAAS,EAAKtB,QApBhD,EAAKA,MAAQ,EAAK1B,MAAMe,MAAQiB,OAAOC,OAAO,GAAI,EAAKjC,MAAMe,OAAS,CAAEE,GAAI,EAAGZ,MAAO,GAAIK,aAAc,IAFtE,E,qDA0BlC,OACE,sBAAKN,UAAU,aAAf,UACE,sBAAKA,UAAU,mBAAf,UAEsB,IAAlBF,KAAKwB,MAAMT,GAAW,8FAAqB,4HAE7C,wBAAQb,UAAU,mBAAmBE,QAASJ,KAAKyC,kBAErD,sBAAKvC,UAAU,kBAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,uFAAyB,uBAAO+B,KAAK,OAAOd,MAAOnB,KAAKwB,MAAMrB,MAAOwB,SAAU3B,KAAKuC,0BAEtF,sBAAKrC,UAAU,iBAAf,UACE,6FAA0B,cAAC,EAAD,CAAWuB,OAAQzB,KAAKwB,MAAMhB,aAAcmB,SAAU3B,KAAKwC,6BAGzF,sBAAKtC,UAAU,oBAAf,UACE,cAAC,EAAD,CAAQE,QAASJ,KAAK2C,YAAaV,KAAK,KAAxC,kBACA,cAAC,EAAD,CAAQ7B,QAASJ,KAAKF,MAAM4C,SAAUT,KAAK,SAA3C,mBAEoB,IAAlBjC,KAAKwB,MAAMT,IAAY,cAAC,EAAD,CAAQX,QAASJ,KAAK6C,cAAeZ,KAAK,SAA1C,8B,GA/CK3B,aCb3ByC,EAAY,YACZC,EAAe,eACfC,EAAe,eCO5B,IAIMC,EAAc,CAClBC,SCZK,SAAwBtC,GAC7B,MAAO,CACLoB,KAAMc,EACNlC,MAAOA,IDUTuC,YCNK,SAA2BvC,GAChC,MAAO,CACLoB,KAAMe,EACNnC,MAAOA,IDITwC,YCAK,SAA2BxC,GAChC,MAAO,CACLoB,KAAMgB,EACNlC,GAAIF,EAAME,M,IDgGCuC,EAhGGC,aAVD,SAAC/B,GAAD,MAAuB,CACtCgC,SAAUhC,EAAMgC,YASkBN,EAgGrBI,C,kDA5Eb,WAAYxD,GAAe,IAAD,8BACxB,cAAMA,IAeR2D,cAAgB,SAAC1C,GACf,IAAK,IAAI2C,EAAI,EAAGA,EAAI,EAAKlC,MAAMgC,SAAS5C,QAAQ+C,OAAQD,IAClD,EAAKlC,MAAMgC,SAAS5C,QAAQ8C,GAAG3C,KAAOA,GACxC,EAAKW,SAAS,CACZkC,UAAU,EACVC,aAAa,eAAM,EAAKrC,MAAMgC,SAAS5C,QAAQ8C,OArB7B,EA2B1BI,cAAgB,WACd,EAAKpC,SAAS,CAAEkC,UAAU,KA5BF,EA+B1BG,YAAc,SAAClD,GACTA,EAAMV,MAAMwD,OAAS,IACvB,EAAKjC,SAAS,CAAEkC,UAAU,IACT,IAAb/C,EAAME,GACR,EAAKjB,MAAMqD,SAAStC,GAEpB,EAAKf,MAAMsD,YAAYvC,KArCH,EA0C1BmD,cAAgB,SAACnD,GACf,EAAKa,SAAS,CAAEkC,UAAU,IAC1B,EAAK9D,MAAMuD,YAAYxC,IA5CC,EA+C1BoD,iBAAmB,WACjB,EAAKvC,SAAS,CACZkC,UAAU,EACVC,aA3DG,CACL9C,GAAI,EACJZ,MAAO,GACPK,aAAc,OASd,EAAKgB,MAAQ,CACXoC,UAAU,EACVJ,SAAS,eAAM,EAAK1D,MAAM0D,UAC1BK,aAfG,CACL9C,GAAI,EACJZ,MAAO,GACPK,aAAc,KAMU,E,sEAUA0D,GACxBlE,KAAK0B,SAAS,CACZ8B,SAAS,eAAMU,EAASV,c,+BA2C1B,OACE,sBAAKtD,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,iDAEF,cAAC,EAAD,CAAQ+B,KAAK,KAAKG,KAAK,MAAMhC,QAASJ,KAAKiE,iBAA3C,uBACA,cAAC,EAAD,CAAWrD,QAASZ,KAAKwB,MAAMgC,SAAS5C,QAASE,SAAUd,KAAKyD,gBAE9DzD,KAAKwB,MAAMoC,UACX,cAAC,EAAD,CACE/C,MAAOb,KAAKwB,MAAMqC,aAClBnB,SAAU1C,KAAK8D,cACflB,OAAQ5C,KAAK+D,YACbjB,SAAU9C,KAAKgE,eAJAhE,KAAKwB,MAAMqC,aAAa9C,W,GAlEjCT,cE7BZ6D,EAA8B,CAClCvD,QAAS,ICNIwD,kBAAgB,CAC7BZ,SDQK,WAAoE,IAAnDhC,EAAkD,uDAA1C2C,EAAcE,EAA4B,uCACxE,OAAQA,EAAOpC,MACb,KAAKc,EACH,MAAO,CACLnC,QAAQ,GAAD,mBAAMY,EAAMZ,SAAZ,CAAqByD,EAAOxD,SAEvC,KAAKmC,EAEH,IADA,IAAIsB,EAAQ,eAAO9C,GACXkC,EAAI,EAAGA,EAAIY,EAAS1D,QAAQ+C,OAAQD,IACtCY,EAAS1D,QAAQ8C,GAAG3C,KAAOsD,EAAOxD,MAAME,KAC1CuD,EAAS1D,QAAQ8C,GAAjB,eAA0BW,EAAOxD,QAGrC,OAAOyD,EACT,KAAKrB,EAEH,OADAzB,EAAMZ,QAAUY,EAAMZ,QAAQ2D,QAAO,SAACpD,GAAD,OAAWA,EAAMJ,KAAOsD,EAAOtD,MAC7D,eAAIS,GACb,QACE,OAAOA,ME5BPgD,EAAqB,CACzB,UACA,YACA,SACA,SACA,SACA,MACA,SACA,SACA,OACA,OACA,SACA,MACA,QACA,aACA,QACA,WACA,UACA,QACA,SACA,UACA,QACA,QACA,QACA,UACA,YACA,OACA,QACA,OACA,QACA,WACA,QACA,YACA,QACA,SACA,UACA,QACA,MACA,OACA,UACA,WACA,UACA,OACA,SACA,QACA,QACA,YACA,WACA,QACA,SACA,OACA,UACA,OACA,OACA,YACA,QACA,OACA,QACA,UACA,WACA,QACA,UACA,SACA,SACA,WACA,QACA,SACA,UACA,OACA,OACA,QACA,WACA,QACA,QACA,SACA,YACA,MACA,UACA,SACA,MACA,UACA,WACA,WACA,QACA,QACA,SACA,OAGIC,EAAmB,CACvB,OACA,SACA,OACA,YACA,SACA,UACA,SACA,WACA,QACA,QACA,UACA,QACA,UACA,OACA,UACA,YACA,cACA,QACA,SACA,MACA,QACA,UACA,QACA,SACA,OACA,OACA,QACA,QACA,SACA,QACA,MACA,QACA,OACA,QACA,OACA,QACA,QACA,MACA,OACA,WACA,SACA,SACA,SACA,SACA,QACA,QACA,UACA,OACA,QACA,OACA,OACA,MACA,UACA,SACA,OACA,WACA,SACA,OACA,OACA,QACA,OACA,QACA,UACA,SACA,OACA,MACA,OACA,YACA,QACA,UACA,SACA,UACA,SACA,MACA,SACA,SACA,SACA,WAGIC,EAAa,CACjB,UACA,QACA,QACA,WACA,SACA,QACA,SACA,QACA,OACA,OACA,QACA,QACA,QACA,OACA,QACA,QACA,WACA,UACA,SACA,UACA,WACA,OACA,UACA,YACA,QACA,WACA,UACA,UACA,WACA,SACA,UACA,OACA,SACA,OACA,UACA,UACA,WACA,SACA,UACA,SACA,SACA,OACA,SACA,SACA,QACA,OACA,SACA,WACA,WACA,SACA,OACA,WACA,YACA,OACA,SACA,SACA,SACA,SACA,SACA,OACA,UACA,QACA,WACA,QACA,QACA,OACA,OACA,OACA,UACA,UACA,WACA,MACA,QACA,QACA,YACA,SACA,YACA,UACA,UACA,WACA,SACA,SACA,MACA,WACA,SACA,UACA,WACA,SACA,QACA,WACA,SACA,WACA,SACA,OACA,SACA,QACA,QACA,QACA,SACA,QACA,OACA,UACA,WACA,QACA,QACA,SACA,QACA,QACA,SACA,UACA,QACA,WACA,UACA,OACA,OACA,UACA,YACA,OACA,UACA,aACA,YACA,QACA,QACA,QACA,UACA,UACA,SACA,QACA,WACA,UACA,aACA,SACA,QACA,UACA,SACA,SACA,YACA,QACA,UACA,SACA,UACA,QACA,SACA,QACA,QACA,UACA,SACA,SACA,SAGF,SAASC,IACP,OAAOD,EAAWE,KAAKC,MAAMD,KAAKE,SAAWJ,EAAWf,SAW1D,SAASoB,EAAuBhE,EAAYZ,EAAe6E,EAAyBC,GAMlF,IALA,IAAIpE,EAAmB,CACrBE,GAAIA,EACJZ,MAAOA,EACPK,aAAc,IAEP0E,EAAI,EAAGA,EAAIN,KAAKC,MAAMD,KAAKE,UAAYG,EAAkBD,EAAkB,IAAMA,EAAiBE,IACzGrE,EAAML,aAAa2E,KAAKD,EAAI,IAAM,EAV7BV,EAAmBI,KAAKC,MAAMD,KAAKE,SAAWL,EAAiBd,SAAW,IAAMgB,IAJhFF,EAAiBG,KAAKC,MAAMD,KAAKE,SAAWL,EAAiBd,SAAW,IAAMgB,KAgBrF,OAAO9D,EChVT,IDmViCuE,EAAuBJ,EAAyBC,ECnV3EI,EAAQC,YAAYC,GDmVOH,ECnVqB,EDmVEJ,ECnVC,EDmVwBC,ECnVrB,EDoVnD,CACLzB,SAAW,WAIT,IAHA,IAAIA,EAA0B,CAC5B5C,QAAS,IAEF8C,EAAI,EAAGA,EAAI0B,EAAe1B,IACjCF,EAAS5C,QAAQuE,KAAKJ,EAAuBrB,EAAE,EAAG,UAAYA,EAAI,GAAG8B,WAAYR,EAAiBC,IAEpG,OAAOzB,EAPE,MCnVfiC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJO,SAASC,eAAe,W","file":"static/js/main.88afe631.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './Label.css';\nlet classNames = require(\"classnames\");\n\ninterface ILabelProps {\n  title: string\n  editable?: boolean\n  onClose?: () => void\n}\n\nexport default class Label extends Component<ILabelProps> {\n  constructor(props: ILabelProps) {\n    super(props)\n  }\n\n  render() {\n    const classes = classNames({\n      Label: true,\n      \"Label-editable\": this.props.editable\n    });\n    return (\n      <div className={classes}>\n        {this.props.title}\n        {this.props.editable &&\n          <button className=\"Label-close\" onClick={this.props.onClose}></button>\n        }\n      </div>\n    )\n  }\n}","import React, {Component} from 'react';\nimport './Entry.css';\nimport Label from './Label';\n\ninterface IProps {\n  title: string,\n  participants?: string[],\n  onClick?: () => void,\n}\n\nexport default class Entry extends Component<IProps> {\n  constructor(props: IProps) {\n    super(props)\n  }\n\n  render() {\n    return (\n      <div className=\"Entry\" onClick={this.props.onClick}>\n        <div className=\"Entry-title\">{this.props.title}</div>\n        <div className=\"Entry-participant-list\">\n        {\n          this.props.participants && this.props.participants.map(participant => {\n            return <Label title={participant} key={\"participant_\"+participant}/>;\n          })\n        }\n        </div>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport './EntryList.css';\nimport Entry from './Entry'\nimport { EntryType } from '../store/types'\n\ninterface IProps {\n  entries: EntryType[],\n  onSelect?: (id: number) => void,\n}\n\nexport default class EntryList extends Component<IProps> {\n  render() {\n    return (\n      <div className=\"EntryList\">\n        {\n          this.props.entries && this.props.entries.map(entry => {\n            return <Entry\n              title={entry.title}\n              key={\"entry_\" + entry.title}\n              participants={entry.participants}\n              onClick={() => this.props.onSelect && this.props.onSelect(entry.id)}\n            />;\n          })\n        }\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport './ListInput.css';\nimport Label from './Label';\n\ninterface IListInputProps {\n  values: string[];\n  onChange?: (values: string[]) => void;\n}\n\ninterface IListInputState {\n  values: string[]\n}\n\nexport default class ListInput extends Component<IListInputProps, IListInputState> {\n  constructor(props: IListInputProps) {\n    super(props)\n    this.state = {\n      values: Object.assign([], this.props.values)\n    }\n  }\n\n  onParticipantEdit = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    let value = (event.target as HTMLInputElement).value.trim();\n    if (event.key === 'Enter' && value !== '') {\n      let newValues = [...this.state.values, value];\n      this.setState({ values: newValues });\n      this.props.onChange && this.props.onChange(newValues);\n      (event.target as HTMLInputElement).value = '';\n    }\n  }\n\n  onParticipantClose = (index: number) => {\n    let newValues = Object.assign([], this.state.values);\n    newValues.splice(index, 1);\n    this.setState({ values: newValues });\n    this.props.onChange && this.props.onChange(newValues);\n  }\n\n  render() {\n    return (\n      <div className=\"ListInput\">\n        {\n          this.state.values && this.state.values.map((value, index) => {\n            return <Label\n              title={value}\n              key={\"value_\" + value}\n              editable={true}\n              onClose={() => this.onParticipantClose(index)}\n            />;\n          })\n        }\n        <input type=\"text\" onKeyPress={this.onParticipantEdit} />\n      </div>\n    )\n  }\n}","import React, {Component} from 'react';\nimport './Button.css';\n\ntype ButtonTypes = \"delete\" | \"ok\" | \"cancel\";\ntype ButtonSizes = \"big\";\n\ninterface IProps {\n  type?: ButtonTypes\n  size?: ButtonSizes,\n  onClick?: () => void\n}\n\nexport default class Button extends Component<IProps> {\n  render() {\n    let classes = 'Button';\n    if (this.props.type) {\n      classes += ' Button-'+this.props.type;\n    }\n    if (this.props.size) {\n      classes += ' Button-'+this.props.size;\n    }\n    return (\n      <button className={classes} onClick={this.props.onClick}>\n        {this.props.children}\n      </button>\n    )\n  }\n}","import React, { Component, ChangeEvent } from 'react';\nimport './EntryModal.css';\nimport { EntryType } from '../store/types';\nimport ListInput from './ListInput';\nimport Button from './Button';\n\ntype EntryModalProps = {\n  entry?: EntryType,\n  onCancel?: () => void,\n  onSave?: (entry: EntryType) => void,\n  onDelete?: (entry: EntryType) => void,\n}\n\nexport default class EntryModal extends Component<EntryModalProps, EntryType> {\n  constructor(props: EntryModalProps) {\n    super(props)\n    this.state = this.props.entry ? Object.assign({}, this.props.entry) : { id: 0, title: '', participants: [] };\n  }\n\n  onTitleChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\n    this.setState({ title: event.target.value });\n  }\n\n  onParticipantsChange = (values: string[]) => {\n    this.setState({ participants: values });\n  }\n\n  onCloseClick = () => {\n    this.props.onCancel && this.props.onCancel();\n  }\n\n  onSaveClick = () => {\n    this.props.onSave && this.props.onSave(this.state);\n  }\n\n  onDeleteClick = () => {\n    this.props.onDelete && this.props.onDelete(this.state);\n  }\n\n  render() {\n    return (\n      <div className=\"EntryModal\">\n        <div className=\"EntryModal-title\">\n          {\n            this.state.id === 0 ? 'Добавить элемент' : 'Редактировать элемент'\n          }\n          <button className=\"EntryModal-close\" onClick={this.onCloseClick}/>\n        </div>\n        <div className=\"EntryModal-body\">\n          <div className=\"EntryModal-row\">\n            <label>Название: </label><input type=\"text\" value={this.state.title} onChange={this.onTitleChangeHandler} />\n          </div>\n          <div className=\"EntryModal-row\">\n            <label>Участники: </label><ListInput values={this.state.participants} onChange={this.onParticipantsChange}/>\n          </div>\n        </div>\n        <div className=\"EntryModal-footer\">\n          <Button onClick={this.onSaveClick} type=\"ok\">Save</Button>\n          <Button onClick={this.props.onCancel} type=\"cancel\">Close</Button>\n          {\n            this.state.id !== 0 && <Button onClick={this.onDeleteClick} type=\"delete\">Delete</Button>\n          }\n        </div>\n      </div>\n    )\n  }\n}","export const ADD_ENTRY = 'ADD_ENTRY';\nexport const UPDATE_ENTRY = 'UPDATE_ENTRY';\nexport const DELETE_ENTRY = 'DELETE_ENTRY';\n\nexport interface EntryAddAction {\n  type: typeof ADD_ENTRY\n  entry: EntryType\n}\n\nexport interface EntryUpdateAction {\n  type: typeof UPDATE_ENTRY\n  entry: EntryType\n}\n\nexport interface EntryDeleteAction {\n  type: typeof DELETE_ENTRY\n  id: number\n}\n\nexport type EntriesActionTypes = EntryAddAction | EntryUpdateAction | EntryDeleteAction;\n\nexport interface EntryType {\n  id: number\n  title: string\n  participants: string[]\n}\n\nexport interface EntryListType {\n  entries: EntryType[],\n}\n\nexport interface RootState {\n  schedule: EntryListType\n}","import React, { Component } from 'react';\nimport './App.css';\nimport EntryList from './components/EntryList';\nimport EntryModal from './components/EntryModal';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { RootState, EntryListType, EntryType } from './store/types'\nimport { addEntryAction, updateEntryAction, deleteEntryAction } from './store/actions'\nimport Button from './components/Button'\n\nconst mapState = (state: RootState) => ({\n  schedule: state.schedule,\n});\n\nconst mapDispatch = {\n  addEntry: addEntryAction,\n  updateEntry: updateEntryAction,\n  deleteEntry: deleteEntryAction,\n}\n\nconst connector = connect(mapState, mapDispatch)\n\ntype Props = ConnectedProps<typeof connector>\n\ninterface IState {\n  is_modal: boolean;\n  schedule: EntryListType;\n  edited_entry: EntryType;\n}\n\nfunction getEmptyEntry(): EntryType {\n  return {\n    id: 0,\n    title: '',\n    participants: [],\n  }\n}\n\nclass App extends Component<Props, IState> {\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      is_modal: true,\n      schedule: { ...this.props.schedule },\n      edited_entry: getEmptyEntry()\n    };\n  }\n\n  componentWillReceiveProps(newProps: Props): void {\n    this.setState({\n      schedule: { ...newProps.schedule },\n    });\n  }\n\n  onEntrySelect = (id: number) => {\n    for (let i = 0; i < this.state.schedule.entries.length; i++) {\n      if (this.state.schedule.entries[i].id === id) {\n        this.setState({\n          is_modal: true,\n          edited_entry: { ...this.state.schedule.entries[i] },\n        })\n      }\n    }\n  }\n\n  onModalCancel = () => {\n    this.setState({ is_modal: false });\n  }\n\n  onModalSave = (entry: EntryType) => {\n    if (entry.title.length > 0) {\n      this.setState({ is_modal: false });\n      if (entry.id === 0) {\n        this.props.addEntry(entry);\n      } else {\n        this.props.updateEntry(entry);\n      }\n    }\n  }\n\n  onModalDelete = (entry: EntryType) => {\n    this.setState({ is_modal: false });\n    this.props.deleteEntry(entry);\n  }\n\n  onAddButtonClick = () => {\n    this.setState({\n      is_modal: true,\n      edited_entry: getEmptyEntry(),\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Easy Schedule</h1>\n        </header>\n        <Button type=\"ok\" size=\"big\" onClick={this.onAddButtonClick}>Add entry</Button>\n        <EntryList entries={this.state.schedule.entries} onSelect={this.onEntrySelect} />\n        {\n          this.state.is_modal &&\n          <EntryModal key={this.state.edited_entry.id}\n            entry={this.state.edited_entry}\n            onCancel={this.onModalCancel}\n            onSave={this.onModalSave}\n            onDelete={this.onModalDelete}\n          />\n        }\n      </div>\n    );\n  }\n}\n\nexport default connector(App);\n","import { ADD_ENTRY, UPDATE_ENTRY, DELETE_ENTRY, EntryType, EntryAddAction, EntryUpdateAction, EntryDeleteAction } from './types';\n\nexport function addEntryAction(entry: EntryType): EntryAddAction {\n  return {\n    type: ADD_ENTRY,\n    entry: entry,\n  }\n}\n\nexport function updateEntryAction(entry: EntryType): EntryUpdateAction {\n  return {\n    type: UPDATE_ENTRY,\n    entry: entry,\n  }\n}\n\nexport function deleteEntryAction(entry: EntryType): EntryDeleteAction {\n  return {\n    type: DELETE_ENTRY,\n    id: entry.id,\n  }\n}","import {\n  EntryListType,\n  EntriesActionTypes,\n  ADD_ENTRY,\n  UPDATE_ENTRY,\n  DELETE_ENTRY\n} from '../types';\n\nconst initialState: EntryListType = {\n  entries: [],\n}\n\nexport function entries(state = initialState, action: EntriesActionTypes) {\n  switch (action.type) {\n    case ADD_ENTRY:\n      return {\n        entries: [...state.entries, action.entry]\n      }\n    case UPDATE_ENTRY:\n      let newState = {...state};\n      for(let i = 0; i < newState.entries.length; i++) {\n        if (newState.entries[i].id === action.entry.id) {\n          newState.entries[i] = {...action.entry}\n        }\n      }\n      return newState;\n    case DELETE_ENTRY:\n      state.entries = state.entries.filter((value) => value.id !== action.id );\n      return {...state};\n    default:\n      return state\n  }\n}","import { combineReducers } from 'redux'\nimport { entries } from './entries'\n\nexport default combineReducers({\n  schedule: entries,\n})","import { EntryListType, EntryType, RootState } from './types'\n\nconst female_first_names = [\n  'Abigail',\n  'Alexandra',\n  'Alison',\n  'Amanda',\n  'Amelia',\n  'Amy',\n  'Andrea',\n  'Angela',\n  'Anna',\n  'Anne',\n  'Audrey',\n  'Ava',\n  'Bella',\n  'Bernadette',\n  'Carol',\n  'Caroline',\n  'Carolyn',\n  'Chloe',\n  'Claire',\n  'Deirdre',\n  'Diana',\n  'Diane',\n  'Donna',\n  'Dorothy',\n  'Elizabeth',\n  'Ella',\n  'Emily',\n  'Emma',\n  'Faith',\n  'Felicity',\n  'Fiona',\n  'Gabrielle',\n  'Grace',\n  'Hannah',\n  'Heather',\n  'Irene',\n  'Jan',\n  'Jane',\n  'Jasmine',\n  'Jennifer',\n  'Jessica',\n  'Joan',\n  'Joanne',\n  'Julia',\n  'Karen',\n  'Katherine',\n  'Kimberly',\n  'Kylie',\n  'Lauren',\n  'Leah',\n  'Lillian',\n  'Lily',\n  'Lisa',\n  'Madeleine',\n  'Maria',\n  'Mary',\n  'Megan',\n  'Melanie',\n  'Michelle',\n  'Molly',\n  'Natalie',\n  'Nicola',\n  'Olivia',\n  'Penelope',\n  'Pippa',\n  'Rachel',\n  'Rebecca',\n  'Rose',\n  'Ruth',\n  'Sally',\n  'Samantha',\n  'Sarah',\n  'Sonia',\n  'Sophie',\n  'Stephanie',\n  'Sue',\n  'Theresa',\n  'Tracey',\n  'Una',\n  'Vanessa',\n  'Victoria',\n  'Virginia',\n  'Wanda',\n  'Wendy',\n  'Yvonne',\n  'Zoe'\n];\n\nconst male_first_names = [\n  'Adam',\n  'Adrian',\n  'Alan',\n  'Alexander',\n  'Andrew',\n  'Anthony',\n  'Austin',\n  'Benjamin',\n  'Blake',\n  'Boris',\n  'Brandon',\n  'Brian',\n  'Cameron',\n  'Carl',\n  'Charles',\n  'Christian',\n  'Christopher',\n  'Colin',\n  'Connor',\n  'Dan',\n  'David',\n  'Dominic',\n  'Dylan',\n  'Edward',\n  'Eric',\n  'Evan',\n  'Frank',\n  'Gavin',\n  'Gordon',\n  'Harry',\n  'Ian',\n  'Isaac',\n  'Jack',\n  'Jacob',\n  'Jake',\n  'James',\n  'Jason',\n  'Joe',\n  'John',\n  'Jonathan',\n  'Joseph',\n  'Joshua',\n  'Julian',\n  'Justin',\n  'Keith',\n  'Kevin',\n  'Leonard',\n  'Liam',\n  'Lucas',\n  'Luke',\n  'Matt',\n  'Max',\n  'Michael',\n  'Nathan',\n  'Neil',\n  'Nicholas',\n  'Oliver',\n  'Owen',\n  'Paul',\n  'Peter',\n  'Phil',\n  'Piers',\n  'Richard',\n  'Robert',\n  'Ryan',\n  'Sam',\n  'Sean',\n  'Sebastian',\n  'Simon',\n  'Stephen',\n  'Steven',\n  'Stewart',\n  'Thomas',\n  'Tim',\n  'Trevor',\n  'Victor',\n  'Warren',\n  'William'\n];\n\nconst last_names = [\n  'Abraham',\n  'Allan',\n  'Alsop',\n  'Anderson',\n  'Arnold',\n  'Avery',\n  'Bailey',\n  'Baker',\n  'Ball',\n  'Bell',\n  'Berry',\n  'Black',\n  'Blake',\n  'Bond',\n  'Bower',\n  'Brown',\n  'Buckland',\n  'Burgess',\n  'Butler',\n  'Cameron',\n  'Campbell',\n  'Carr',\n  'Chapman',\n  'Churchill',\n  'Clark',\n  'Clarkson',\n  'Coleman',\n  'Cornish',\n  'Davidson',\n  'Davies',\n  'Dickens',\n  'Dowd',\n  'Duncan',\n  'Dyer',\n  'Edmunds',\n  'Ellison',\n  'Ferguson',\n  'Fisher',\n  'Forsyth',\n  'Fraser',\n  'Gibson',\n  'Gill',\n  'Glover',\n  'Graham',\n  'Grant',\n  'Gray',\n  'Greene',\n  'Hamilton',\n  'Hardacre',\n  'Harris',\n  'Hart',\n  'Hemmings',\n  'Henderson',\n  'Hill',\n  'Hodges',\n  'Howard',\n  'Hudson',\n  'Hughes',\n  'Hunter',\n  'Ince',\n  'Jackson',\n  'James',\n  'Johnston',\n  'Jones',\n  'Kelly',\n  'Kerr',\n  'King',\n  'Knox',\n  'Lambert',\n  'Langdon',\n  'Lawrence',\n  'Lee',\n  'Lewis',\n  'Lyman',\n  'MacDonald',\n  'Mackay',\n  'Mackenzie',\n  'MacLeod',\n  'Manning',\n  'Marshall',\n  'Martin',\n  'Mathis',\n  'May',\n  'McDonald',\n  'McLean',\n  'McGrath',\n  'Metcalfe',\n  'Miller',\n  'Mills',\n  'Mitchell',\n  'Morgan',\n  'Morrison',\n  'Murray',\n  'Nash',\n  'Newman',\n  'Nolan',\n  'North',\n  'Ogden',\n  'Oliver',\n  'Paige',\n  'Parr',\n  'Parsons',\n  'Paterson',\n  'Payne',\n  'Peake',\n  'Peters',\n  'Piper',\n  'Poole',\n  'Powell',\n  'Pullman',\n  'Quinn',\n  'Rampling',\n  'Randall',\n  'Rees',\n  'Reid',\n  'Roberts',\n  'Robertson',\n  'Ross',\n  'Russell',\n  'Rutherford',\n  'Sanderson',\n  'Scott',\n  'Sharp',\n  'Short',\n  'Simpson',\n  'Skinner',\n  'Slater',\n  'Smith',\n  'Springer',\n  'Stewart',\n  'Sutherland',\n  'Taylor',\n  'Terry',\n  'Thomson',\n  'Tucker',\n  'Turner',\n  'Underwood',\n  'Vance',\n  'Vaughan',\n  'Walker',\n  'Wallace',\n  'Walsh',\n  'Watson',\n  'Welch',\n  'White',\n  'Wilkins',\n  'Wilson',\n  'Wright',\n  'Young'\n];\n\nfunction getRandomLastName(): string {\n  return last_names[Math.floor(Math.random() * last_names.length)];\n}\n\nfunction getMaleName(): string {\n  return male_first_names[Math.floor(Math.random() * male_first_names.length)] + ' ' + getRandomLastName();\n}\n\nfunction getFemaleName(): string {\n  return female_first_names[Math.floor(Math.random() * male_first_names.length)] + ' ' + getRandomLastName();\n}\n\nfunction getRandomScheduleEntry(id: number, title: string, min_participant: number, max_participant: number): EntryType {\n  let entry: EntryType = {\n    id: id,\n    title: title,\n    participants: [],\n  };\n  for (let j = 0; j < Math.floor(Math.random() * (max_participant - min_participant + 1)) + min_participant; j++) {\n    entry.participants.push(j % 2 === 0 ? getFemaleName() : getMaleName());\n  }\n  return entry;\n}\n\nexport default function generate(entries_count: number, min_participant: number, max_participant: number): RootState {\n  return {\n    schedule: ((): EntryListType => {\n      let schedule: EntryListType = {\n        entries: [],\n      };\n      for (let i = 0; i < entries_count; i++) {\n        schedule.entries.push(getRandomScheduleEntry(i+1, 'Dance ' + (i + 1).toString(), min_participant, max_participant));\n      }\n      return schedule;\n    })(),\n  };\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport './index.css'\nimport App from './App'\nimport rootReducer from './store/reducers'\nimport data_generator from './store/demo';\n\nconst store = createStore(rootReducer, data_generator(5, 2, 6))\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}