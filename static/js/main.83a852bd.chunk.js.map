{"version":3,"sources":["components/Entry.tsx","components/EntryList.tsx","components/EntryModal.tsx","store/types.ts","App.tsx","store/actions.ts","store/reducers/entries.ts","store/reducers/index.ts","store/demo.ts","store/index.ts","store/localstorage.ts","index.tsx"],"names":["Entry","props","draggableId","entry_id","toString","index","provided","Card","className","onClick","draggableProps","dragHandleProps","ref","innerRef","CardContent","title","participants","map","participant","Chip","label","color","EntryList","onDragEnd","result","destination","source","onRearrange","droppableId","droppableProps","entries","entry","id","onSelect","placeholder","EntryModal","initialState","Object","assign","useState","state","setState","theme","useTheme","fullScreen","useMediaQuery","breakpoints","down","Dialog","open","onClose","onCancel","DialogTitle","DialogContent","TextField","margin","type","fullWidth","value","onChange","event","target","variant","defaultValue","values","DialogActions","Button","onDelete","onSave","ADD_ENTRY","UPDATE_ENTRY","DELETE_ENTRY","REARRANGE_ENTRY","mapDispatch","addEntry","updateEntry","deleteEntry","rearrangeEntry","connector","connect","schedule","is_modal","edited_entry","i","length","CssBaseline","combineReducers","action","newState","filter","currentEntry","currentIndex","splice","female_first_names","male_first_names","last_names","getRandomLastName","Math","floor","random","getRandomScheduleEntry","min_participant","max_participant","j","push","entries_count","key","localStorageKey","serializedState","localStorage","getItem","JSON","parse","err","loadState","middleWare","applyMiddleware","store","next","stringify","setItem","saveState","getState","createStore","rootReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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,MAAMC,KAC1CwD,EAAS1D,QAAQqD,GAAjB,eAA0BI,EAAOxD,QAGrC,OAAOyD,EACT,KAAKjB,EAEH,OADA/B,EAAMV,QAAUU,EAAMV,QAAQ2D,QAAO,SAAC/B,GAAD,OAAWA,EAAM1B,KAAOuD,EAAOvD,MAC7D,eAAIQ,GACb,KAAKgC,EAGH,IAFA,IACIkB,EADAC,GAAgB,EAEZR,EAAI,EAAGA,EAAI3C,EAAMV,QAAQsD,OAAQD,IACvC,GAAI3C,EAAMV,QAAQqD,GAAGnD,KAAOuD,EAAOvD,GAAI,CACrC2D,EAAeR,EACf,MAGJ,IAAsB,IAAlBQ,EACF,OAAOnD,EAVX,MAamBA,EAAMV,QAAQ8D,OAAOD,EAAc,GAbtD,mBAeE,OAFCD,EAbH,KAcElD,EAAMV,QAAQ8D,OAAOL,EAAOlF,MAAO,EAAGqF,GAC/B,eAAIlD,GACb,QACE,OAAOA,ME9CPqD,EAAqB,CACzB,UACA,YACA,SACA,SACA,SACA,MACA,SACA,SACA,OACA,OACA,SACA,MACA,QACA,aACA,QACA,WACA,UACA,QACA,SACA,UACA,QACA,QACA,QACA,UACA,YACA,OACA,QACA,OACA,QACA,WACA,QACA,YACA,QACA,SACA,UACA,QACA,MACA,OACA,UACA,WACA,UACA,OACA,SACA,QACA,QACA,YACA,WACA,QACA,SACA,OACA,UACA,OACA,OACA,YACA,QACA,OACA,QACA,UACA,WACA,QACA,UACA,SACA,SACA,WACA,QACA,SACA,UACA,OACA,OACA,QACA,WACA,QACA,QACA,SACA,YACA,MACA,UACA,SACA,MACA,UACA,WACA,WACA,QACA,QACA,SACA,OAGIC,EAAmB,CACvB,OACA,SACA,OACA,YACA,SACA,UACA,SACA,WACA,QACA,QACA,UACA,QACA,UACA,OACA,UACA,YACA,cACA,QACA,SACA,MACA,QACA,UACA,QACA,SACA,OACA,OACA,QACA,QACA,SACA,QACA,MACA,QACA,OACA,QACA,OACA,QACA,QACA,MACA,OACA,WACA,SACA,SACA,SACA,SACA,QACA,QACA,UACA,OACA,QACA,OACA,OACA,MACA,UACA,SACA,OACA,WACA,SACA,OACA,OACA,QACA,OACA,QACA,UACA,SACA,OACA,MACA,OACA,YACA,QACA,UACA,SACA,UACA,SACA,MACA,SACA,SACA,SACA,WAGIC,EAAa,CACjB,UACA,QACA,QACA,WACA,SACA,QACA,SACA,QACA,OACA,OACA,QACA,QACA,QACA,OACA,QACA,QACA,WACA,UACA,SACA,UACA,WACA,OACA,UACA,YACA,QACA,WACA,UACA,UACA,WACA,SACA,UACA,OACA,SACA,OACA,UACA,UACA,WACA,SACA,UACA,SACA,SACA,OACA,SACA,SACA,QACA,OACA,SACA,WACA,WACA,SACA,OACA,WACA,YACA,OACA,SACA,SACA,SACA,SACA,SACA,OACA,UACA,QACA,WACA,QACA,QACA,OACA,OACA,OACA,UACA,UACA,WACA,MACA,QACA,QACA,YACA,SACA,YACA,UACA,UACA,WACA,SACA,SACA,MACA,WACA,SACA,UACA,WACA,SACA,QACA,WACA,SACA,WACA,SACA,OACA,SACA,QACA,QACA,QACA,SACA,QACA,OACA,UACA,WACA,QACA,QACA,SACA,QACA,QACA,SACA,UACA,QACA,WACA,UACA,OACA,OACA,UACA,YACA,OACA,UACA,aACA,YACA,QACA,QACA,QACA,UACA,UACA,SACA,QACA,WACA,UACA,aACA,SACA,QACA,UACA,SACA,SACA,YACA,QACA,UACA,SACA,UACA,QACA,SACA,QACA,QACA,UACA,SACA,SACA,SAGF,SAASC,IACP,OAAOD,EAAWE,KAAKC,MAAMD,KAAKE,SAAWJ,EAAWX,SAW1D,SAASgB,EAAuBpE,EAAYjB,EAAesF,EAAyBC,GAMlF,IALA,IAAIvE,EAAmB,CACrBC,GAAIA,EACJjB,MAAOA,EACPC,aAAc,IAEPuF,EAAI,EAAGA,EAAIN,KAAKC,MAAMD,KAAKE,UAAYG,EAAkBD,EAAkB,IAAMA,EAAiBE,IACzGxE,EAAMf,aAAawF,KAAKD,EAAI,IAAM,EAV7BV,EAAmBI,KAAKC,MAAMD,KAAKE,SAAWL,EAAiBV,SAAW,IAAMY,IAJhFF,EAAiBG,KAAKC,MAAMD,KAAKE,SAAWL,EAAiBV,SAAW,IAAMY,KAgBrF,OAAOjE,ECpVT,IDuViC0E,EAAuBJ,EAAyBC,EErU1CI,EDlBjCC,EAAkB,gBAElBvE,EAAeC,OAAOC,QDqVKmE,ECrViB,EDqVMJ,ECrVH,EDqV4BC,ECrVzB,EDsV/C,CACLtB,SAAW,WAIT,IAHA,IAAIA,EAA0B,CAC5BlD,QAAS,IAEFqD,EAAI,EAAGA,EAAIsB,EAAetB,IACjCH,EAASlD,QAAQ0E,KAAKJ,EAAuBjB,EAAE,EAAG,UAAYA,EAAI,GAAG/E,WAAYiG,EAAiBC,IAEpG,OAAOtB,EAPE,KE5VU,SAAC0B,GACxB,IACE,IAAME,EAAkBC,aAAaC,QAAQJ,GAC7C,GAAwB,OAApBE,EACF,OAEF,OAAOG,KAAKC,MAAMJ,GAClB,MAAOK,GACP,QDHwDC,CAAUP,IAEhEQ,EAAaC,aCcoBV,EDdmBC,ECejD,SAAAU,GAAK,OAAI,SAAAC,GAAI,OAAI,SAAA/B,GACtB+B,EAAK/B,GAXgB,SAACmB,EAAalE,GACrC,IACE,IAAMoE,EAAkBG,KAAKQ,UAAU/E,GACvCqE,aAAaW,QAAQd,EAAKE,GAC1B,WAQAa,CAAUf,EAAKW,EAAMK,iBDbVL,EAFDM,YAAYC,EAAaxF,EAAc+E,GEJrDU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUV,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJW,SAASC,eAAe,W","file":"static/js/main.83a852bd.chunk.js","sourcesContent":["import React from 'react';\nimport './Entry.css';\nimport { Draggable } from 'react-beautiful-dnd'\nimport Chip from '@material-ui/core/Chip'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\n\ninterface IProps {\n  entry_id: number,\n  index: number,\n  title: string,\n  participants?: string[],\n  onClick?: () => void,\n}\n\nexport default function Entry(props:IProps) {\n    return (\n      <Draggable draggableId={props.entry_id.toString()} index={props.index}>\n        {(provided) => (\n          <Card className=\"Entry\" onClick={props.onClick} {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\n            <CardContent>\n              <div className=\"Entry-title\">{props.title}</div>\n              <div className=\"Entry-participant-list\">\n                {\n                  props.participants && props.participants.map(participant => {\n                    return <Chip label={participant} color=\"primary\" key={participant} />;\n                  })\n                }\n              </div>\n            </CardContent>\n          </Card>\n        )}\n      </Draggable>\n    )\n}","import React from 'react';\nimport './EntryList.css';\nimport Entry from './Entry'\nimport { EntryType } from '../store/types'\nimport { DragDropContext, DropResult, Droppable } from 'react-beautiful-dnd'\n\ninterface IProps {\n  entries: EntryType[],\n  onSelect?: (id: number) => void,\n  onRearrange?: (id: number, index: number) => void\n}\n\nexport default function EntryList(props:IProps) {\n  function onDragEnd(result: DropResult) {\n    const {destination, source, draggableId} = result; \n    if (!destination || !props.onRearrange) {\n      return;\n    }\n\n    if (destination.index === source.index) {\n      return;\n    }\n\n    props.onRearrange(+draggableId, destination.index)\n  }\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Droppable droppableId=\"1\">\n        {provided => (\n          <div\n            className=\"EntryList\"\n            ref={provided.innerRef}\n            {...provided.droppableProps}\n          >\n            {\n              props.entries && props.entries.map((entry, index) => {\n                return <Entry\n                  entry_id={entry.id}\n                  index = {index}\n                  title={entry.title}\n                  key={\"entry_\" + entry.title}\n                  participants={entry.participants}\n                  onClick={() => props.onSelect && props.onSelect(entry.id)}\n                />;\n              })\n            }\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    </DragDropContext>\n  )\n}","import React, { useState, ChangeEvent } from 'react';\nimport { EntryType } from '../store/types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport TextField from '@material-ui/core/TextField';\nimport ChipInput from 'material-ui-chip-input';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\n\ntype EntryModalProps = {\n  open: boolean,\n  entry?: EntryType,\n  onCancel?: () => void,\n  onSave?: (entry: EntryType) => void,\n  onDelete?: (entry: EntryType) => void,\n}\n\nexport default function EntryModal(props: EntryModalProps) {\n  const initialState = props.entry ? Object.assign({}, props.entry) : { id: 0, title: '', participants: [] };\n  const [state, setState] = useState(initialState);\n\n  function onTitleChangeHandler(event: ChangeEvent<HTMLInputElement>) {\n    setState({ ...state, title: event.target.value });\n  }\n\n  function onParticipantsChange(values: string[]) {\n    setState({ ...state, participants: values });\n  }\n\n  function onSaveClick() {\n    props.onSave && props.onSave(state);\n  }\n\n  function onDeleteClick() {\n    props.onDelete && props.onDelete(state);\n  }\n\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  return (\n    <Dialog\n      open={props.open}\n      fullScreen={fullScreen}\n      onClose={props.onCancel}\n    >\n      <DialogTitle>\n        {\n          state.id === 0 ? 'Добавить элемент' : 'Редактировать элемент'\n        }\n      </DialogTitle>\n      <DialogContent>\n        <TextField\n          margin=\"dense\"\n          label=\"Название:\"\n          type=\"text\"\n          fullWidth\n          value={state.title}\n          onChange={onTitleChangeHandler}\n        />\n        <ChipInput\n          label=\"Участники:\"\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          defaultValue={state.participants}\n          onChange={onParticipantsChange}\n        />\n      </DialogContent>\n      <DialogActions>\n        {\n          state.id !== 0 &&\n          <Button onClick={onDeleteClick} color=\"secondary\">\n            Delete\n          </Button>\n        }\n        <Button onClick={props.onCancel}>\n          Close\n        </Button>\n        <Button onClick={onSaveClick}>\n          Save\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}","export const ADD_ENTRY = 'ADD_ENTRY';\nexport const UPDATE_ENTRY = 'UPDATE_ENTRY';\nexport const DELETE_ENTRY = 'DELETE_ENTRY';\nexport const REARRANGE_ENTRY = 'REARRANGE_ENTRY';\n\nexport interface EntryAddAction {\n  type: typeof ADD_ENTRY\n  entry: EntryType\n}\n\nexport interface EntryUpdateAction {\n  type: typeof UPDATE_ENTRY\n  entry: EntryType\n}\n\nexport interface EntryDeleteAction {\n  type: typeof DELETE_ENTRY\n  id: number\n}\n\nexport interface EntryRearrangeAction {\n  type: typeof REARRANGE_ENTRY\n  id: number\n  index: number\n}\n\nexport type EntriesActionTypes = EntryAddAction | EntryUpdateAction | EntryDeleteAction | EntryRearrangeAction;\n\nexport interface EntryType {\n  id: number\n  title: string\n  participants: string[]\n}\n\nexport interface EntryListType {\n  entries: EntryType[],\n}\n\nexport interface RootState {\n  schedule: EntryListType\n}","import React, { useState } from 'react';\nimport './App.css';\nimport EntryList from './components/EntryList';\nimport EntryModal from './components/EntryModal';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { RootState, EntryType } from './store/types'\nimport { addEntryAction, updateEntryAction, deleteEntryAction, rearrangeEntryAction } from './store/actions'\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nconst mapState = (state: RootState) => ({\n  schedule: state.schedule,\n});\n\nconst mapDispatch = {\n  addEntry: addEntryAction,\n  updateEntry: updateEntryAction,\n  deleteEntry: deleteEntryAction,\n  rearrangeEntry: rearrangeEntryAction,\n}\n\nconst connector = connect(mapState, mapDispatch)\n\ntype Props = ConnectedProps<typeof connector>\n\nfunction getEmptyEntry(): EntryType {\n  return {\n    id: 0,\n    title: '',\n    participants: [],\n  }\n}\n\nfunction App(props: Props) {\n  const [state, setState] = useState({\n    is_modal: false,\n    schedule: { ...props.schedule },\n    edited_entry: getEmptyEntry()\n  });\n\n  function onEntrySelect(id: number) {\n    for (let i = 0; i < state.schedule.entries.length; i++) {\n      if (state.schedule.entries[i].id === id) {\n        setState({\n          ...state,\n          is_modal: true,\n          edited_entry: { ...state.schedule.entries[i] },\n        })\n      }\n    }\n  }\n\n  function onModalCancel() {\n    setState({ ...state, is_modal: false });\n  }\n\n  function onModalSave(entry: EntryType) {\n    if (entry.title.length > 0) {\n      setState({\n        ...state,\n        is_modal: false\n      });\n      if (entry.id === 0) {\n        props.addEntry(entry);\n      } else {\n        props.updateEntry(entry);\n      }\n    }\n  }\n\n  function onModalDelete(entry: EntryType) {\n    setState({\n      ...state,\n      is_modal: false\n    });\n    props.deleteEntry(entry);\n  }\n\n  function onAddButtonClick() {\n    setState({\n      ...state,\n      is_modal: true,\n      edited_entry: getEmptyEntry(),\n    });\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Easy Schedule</h1>\n      </header>\n      <Button variant=\"contained\" color=\"primary\" onClick={onAddButtonClick}>Add entry</Button>\n      <EntryList\n        entries={state.schedule.entries}\n        onSelect={onEntrySelect}\n        onRearrange={props.rearrangeEntry}\n      />\n      <EntryModal key={state.edited_entry.id}\n        open={state.is_modal}\n        entry={state.edited_entry}\n        onCancel={onModalCancel}\n        onSave={onModalSave}\n        onDelete={onModalDelete}\n      />\n      <CssBaseline />\n    </div>\n  );\n}\n\nexport default connector(App);\n","import {\n  ADD_ENTRY, UPDATE_ENTRY, DELETE_ENTRY, REARRANGE_ENTRY,\n  EntryAddAction, EntryUpdateAction, EntryDeleteAction, EntryRearrangeAction,\n  EntryType,\n} from './types';\n\nexport function addEntryAction(entry: EntryType): EntryAddAction {\n  return {\n    type: ADD_ENTRY,\n    entry: entry,\n  }\n}\n\nexport function updateEntryAction(entry: EntryType): EntryUpdateAction {\n  return {\n    type: UPDATE_ENTRY,\n    entry: entry,\n  }\n}\n\nexport function deleteEntryAction(entry: EntryType): EntryDeleteAction {\n  return {\n    type: DELETE_ENTRY,\n    id: entry.id,\n  }\n}\n\nexport function rearrangeEntryAction(id: number, index: number): EntryRearrangeAction {\n  return {\n    type: REARRANGE_ENTRY,\n    id: id,\n    index: index,\n  }\n}","import {\n  EntryListType,\n  EntriesActionTypes,\n  EntryType,\n  ADD_ENTRY,\n  UPDATE_ENTRY,\n  DELETE_ENTRY,\n  REARRANGE_ENTRY,\n} from '../types';\n\nconst initialState: EntryListType = {\n  entries: [],\n}\n\nexport function entries(state = initialState, action: EntriesActionTypes) {\n  switch (action.type) {\n    case ADD_ENTRY:\n      return {\n        entries: [...state.entries, action.entry]\n      }\n    case UPDATE_ENTRY:\n      let newState = {...state};\n      for(let i = 0; i < newState.entries.length; i++) {\n        if (newState.entries[i].id === action.entry.id) {\n          newState.entries[i] = {...action.entry}\n        }\n      }\n      return newState;\n    case DELETE_ENTRY:\n      state.entries = state.entries.filter((value) => value.id !== action.id );\n      return {...state};\n    case REARRANGE_ENTRY:\n      let currentIndex = -1;\n      let currentEntry: EntryType;\n      for(let i = 0; i < state.entries.length; i++) {\n        if (state.entries[i].id === action.id) {\n          currentIndex = i;\n          break;\n        }\n      }\n      if (currentIndex === -1) {\n        return state;\n      }\n\n      [currentEntry] = state.entries.splice(currentIndex, 1);\n      state.entries.splice(action.index, 0, currentEntry);\n      return {...state};\n    default:\n      return state\n  }\n}","import { combineReducers } from 'redux'\nimport { entries } from './entries'\n\nexport default combineReducers({\n  schedule: entries,\n})","import { EntryListType, EntryType, RootState } from './types'\n\nconst female_first_names = [\n  'Abigail',\n  'Alexandra',\n  'Alison',\n  'Amanda',\n  'Amelia',\n  'Amy',\n  'Andrea',\n  'Angela',\n  'Anna',\n  'Anne',\n  'Audrey',\n  'Ava',\n  'Bella',\n  'Bernadette',\n  'Carol',\n  'Caroline',\n  'Carolyn',\n  'Chloe',\n  'Claire',\n  'Deirdre',\n  'Diana',\n  'Diane',\n  'Donna',\n  'Dorothy',\n  'Elizabeth',\n  'Ella',\n  'Emily',\n  'Emma',\n  'Faith',\n  'Felicity',\n  'Fiona',\n  'Gabrielle',\n  'Grace',\n  'Hannah',\n  'Heather',\n  'Irene',\n  'Jan',\n  'Jane',\n  'Jasmine',\n  'Jennifer',\n  'Jessica',\n  'Joan',\n  'Joanne',\n  'Julia',\n  'Karen',\n  'Katherine',\n  'Kimberly',\n  'Kylie',\n  'Lauren',\n  'Leah',\n  'Lillian',\n  'Lily',\n  'Lisa',\n  'Madeleine',\n  'Maria',\n  'Mary',\n  'Megan',\n  'Melanie',\n  'Michelle',\n  'Molly',\n  'Natalie',\n  'Nicola',\n  'Olivia',\n  'Penelope',\n  'Pippa',\n  'Rachel',\n  'Rebecca',\n  'Rose',\n  'Ruth',\n  'Sally',\n  'Samantha',\n  'Sarah',\n  'Sonia',\n  'Sophie',\n  'Stephanie',\n  'Sue',\n  'Theresa',\n  'Tracey',\n  'Una',\n  'Vanessa',\n  'Victoria',\n  'Virginia',\n  'Wanda',\n  'Wendy',\n  'Yvonne',\n  'Zoe'\n];\n\nconst male_first_names = [\n  'Adam',\n  'Adrian',\n  'Alan',\n  'Alexander',\n  'Andrew',\n  'Anthony',\n  'Austin',\n  'Benjamin',\n  'Blake',\n  'Boris',\n  'Brandon',\n  'Brian',\n  'Cameron',\n  'Carl',\n  'Charles',\n  'Christian',\n  'Christopher',\n  'Colin',\n  'Connor',\n  'Dan',\n  'David',\n  'Dominic',\n  'Dylan',\n  'Edward',\n  'Eric',\n  'Evan',\n  'Frank',\n  'Gavin',\n  'Gordon',\n  'Harry',\n  'Ian',\n  'Isaac',\n  'Jack',\n  'Jacob',\n  'Jake',\n  'James',\n  'Jason',\n  'Joe',\n  'John',\n  'Jonathan',\n  'Joseph',\n  'Joshua',\n  'Julian',\n  'Justin',\n  'Keith',\n  'Kevin',\n  'Leonard',\n  'Liam',\n  'Lucas',\n  'Luke',\n  'Matt',\n  'Max',\n  'Michael',\n  'Nathan',\n  'Neil',\n  'Nicholas',\n  'Oliver',\n  'Owen',\n  'Paul',\n  'Peter',\n  'Phil',\n  'Piers',\n  'Richard',\n  'Robert',\n  'Ryan',\n  'Sam',\n  'Sean',\n  'Sebastian',\n  'Simon',\n  'Stephen',\n  'Steven',\n  'Stewart',\n  'Thomas',\n  'Tim',\n  'Trevor',\n  'Victor',\n  'Warren',\n  'William'\n];\n\nconst last_names = [\n  'Abraham',\n  'Allan',\n  'Alsop',\n  'Anderson',\n  'Arnold',\n  'Avery',\n  'Bailey',\n  'Baker',\n  'Ball',\n  'Bell',\n  'Berry',\n  'Black',\n  'Blake',\n  'Bond',\n  'Bower',\n  'Brown',\n  'Buckland',\n  'Burgess',\n  'Butler',\n  'Cameron',\n  'Campbell',\n  'Carr',\n  'Chapman',\n  'Churchill',\n  'Clark',\n  'Clarkson',\n  'Coleman',\n  'Cornish',\n  'Davidson',\n  'Davies',\n  'Dickens',\n  'Dowd',\n  'Duncan',\n  'Dyer',\n  'Edmunds',\n  'Ellison',\n  'Ferguson',\n  'Fisher',\n  'Forsyth',\n  'Fraser',\n  'Gibson',\n  'Gill',\n  'Glover',\n  'Graham',\n  'Grant',\n  'Gray',\n  'Greene',\n  'Hamilton',\n  'Hardacre',\n  'Harris',\n  'Hart',\n  'Hemmings',\n  'Henderson',\n  'Hill',\n  'Hodges',\n  'Howard',\n  'Hudson',\n  'Hughes',\n  'Hunter',\n  'Ince',\n  'Jackson',\n  'James',\n  'Johnston',\n  'Jones',\n  'Kelly',\n  'Kerr',\n  'King',\n  'Knox',\n  'Lambert',\n  'Langdon',\n  'Lawrence',\n  'Lee',\n  'Lewis',\n  'Lyman',\n  'MacDonald',\n  'Mackay',\n  'Mackenzie',\n  'MacLeod',\n  'Manning',\n  'Marshall',\n  'Martin',\n  'Mathis',\n  'May',\n  'McDonald',\n  'McLean',\n  'McGrath',\n  'Metcalfe',\n  'Miller',\n  'Mills',\n  'Mitchell',\n  'Morgan',\n  'Morrison',\n  'Murray',\n  'Nash',\n  'Newman',\n  'Nolan',\n  'North',\n  'Ogden',\n  'Oliver',\n  'Paige',\n  'Parr',\n  'Parsons',\n  'Paterson',\n  'Payne',\n  'Peake',\n  'Peters',\n  'Piper',\n  'Poole',\n  'Powell',\n  'Pullman',\n  'Quinn',\n  'Rampling',\n  'Randall',\n  'Rees',\n  'Reid',\n  'Roberts',\n  'Robertson',\n  'Ross',\n  'Russell',\n  'Rutherford',\n  'Sanderson',\n  'Scott',\n  'Sharp',\n  'Short',\n  'Simpson',\n  'Skinner',\n  'Slater',\n  'Smith',\n  'Springer',\n  'Stewart',\n  'Sutherland',\n  'Taylor',\n  'Terry',\n  'Thomson',\n  'Tucker',\n  'Turner',\n  'Underwood',\n  'Vance',\n  'Vaughan',\n  'Walker',\n  'Wallace',\n  'Walsh',\n  'Watson',\n  'Welch',\n  'White',\n  'Wilkins',\n  'Wilson',\n  'Wright',\n  'Young'\n];\n\nfunction getRandomLastName(): string {\n  return last_names[Math.floor(Math.random() * last_names.length)];\n}\n\nfunction getMaleName(): string {\n  return male_first_names[Math.floor(Math.random() * male_first_names.length)] + ' ' + getRandomLastName();\n}\n\nfunction getFemaleName(): string {\n  return female_first_names[Math.floor(Math.random() * male_first_names.length)] + ' ' + getRandomLastName();\n}\n\nfunction getRandomScheduleEntry(id: number, title: string, min_participant: number, max_participant: number): EntryType {\n  let entry: EntryType = {\n    id: id,\n    title: title,\n    participants: [],\n  };\n  for (let j = 0; j < Math.floor(Math.random() * (max_participant - min_participant + 1)) + min_participant; j++) {\n    entry.participants.push(j % 2 === 0 ? getFemaleName() : getMaleName());\n  }\n  return entry;\n}\n\nexport default function generate(entries_count: number, min_participant: number, max_participant: number): RootState {\n  return {\n    schedule: ((): EntryListType => {\n      let schedule: EntryListType = {\n        entries: [],\n      };\n      for (let i = 0; i < entries_count; i++) {\n        schedule.entries.push(getRandomScheduleEntry(i+1, 'Dance ' + (i + 1).toString(), min_participant, max_participant));\n      }\n      return schedule;\n    })(),\n  };\n}","import { createStore, applyMiddleware } from 'redux'\nimport rootReducer from './reducers'\nimport data_generator from './demo';\nimport { loadState, LocalStorageMiddleware } from './localstorage'\n\nconst localStorageKey = 'easy-schedule';\n\nconst initialState = Object.assign(data_generator(5, 2, 6), loadState(localStorageKey))\n\nconst middleWare = applyMiddleware(LocalStorageMiddleware(localStorageKey));\n\nconst store = createStore(rootReducer, initialState, middleWare);\n\nexport default store;","import { Middleware } from 'redux'\n\nexport const loadState = (key: string) => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const saveState = (key: string, state: object) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(key, serializedState);\n  } catch {\n    // ignore write errors\n  }\n};\n\nexport function LocalStorageMiddleware(key: string): Middleware {\n  return store => next => action => {\n    next(action);\n    saveState(key, store.getState());\n  }\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport './index.css'\nimport App from './App'\nimport store from './store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}