{"version":3,"sources":["components/Entry.tsx","components/EntryList.tsx","components/ChipInput.js","components/EntryModal.tsx","store/types.ts","components/NewProject/images/empty_schedule.svg","components/NewProject/images/demo_schedule.svg","components/NewProject/index.tsx","components/Modal.tsx","App.tsx","store/actions.ts","store/demo.ts","store/reducers/entries.ts","store/reducers/index.ts","store/index.ts","store/localstorage.ts","index.tsx","components/NewProject/styles.module.css"],"names":["Entry","props","bad_participants","style","length","forEach","item","backgroundColor","handleExpandClick","e","stopPropagation","onCollapseExpand","draggableId","entry_id","toString","index","provided","Card","className","onClick","draggableProps","dragHandleProps","ref","innerRef","CardContent","IconButton","clsx","expanded","aria-expanded","aria-label","ExpandMore","title","Collapse","in","timeout","unmountOnExit","participants","map","participant","color","Chip","label","EntryList","entries","prevEntry","undefined","result","entry","push","indexOf","BadParticipantsForEntries","onDragEnd","destination","source","onRearrange","droppableId","droppableProps","id","onSelect","placeholder","variantComponent","standard","Input","filled","FilledInput","outlined","OutlinedInput","keyCodes","ChipInput","state","chips","errorText","focusedChip","inputValue","isClean","isFocused","chipsUpdated","prevPropsValue","focus","actualInput","setState","handleInputBlur","event","onBlur","addChipOptions","value","target","blurBehavior","clearInputOnFail","delayBeforeAdd","numChipsBefore","inputBlurTimeout","setTimeout","numChipsAfter","handleAddChip","clearInput","handleInputFocus","onFocus","handleKeyDown","_keyPressed","_preventChipCreation","onKeyDown","isDefaultPrevented","newChipKeyCodes","keyCode","newChipKeys","key","preventDefault","handleDeleteChip","handleKeyUp","updateInput","onKeyUp","handleKeyPress","onKeyPress","handleUpdateInput","onUpdateInput","setActualInputRef","inputRef","defaultValue","labelRef","React","createRef","input","this","variant","labelNode","ReactDOM","findDOMNode","current","forceUpdate","clearTimeout","blur","chip","options","onBeforeAdd","dataSourceConfig","text","allowDuplicates","some","c","onAdd","updateChips","trim","i","onDelete","slice","splice","additionalUpdates","onChange","alwaysShowPlaceholder","children","chipRenderer","defaultChipRenderer","classes","clearInputValueOnChange","dataSource","disabled","disableUnderline","error","FormHelperTextProps","filter","fullWidth","fullWidthInput","helperText","InputProps","InputLabelProps","readOnly","required","rootRef","other","actualInputValue","hasInput","shrinkFloatingLabel","shrink","chipComponents","isDisabled","isReadOnly","handleClick","handleDelete","InputMore","notched","startAdornment","Fragment","InputComponent","FormControl","cx","root","marginDense","margin","InputLabel","htmlFor","labelShrink","focused","chipContainer","underline","labeled","inputRoot","FormHelperText","newState","Component","defaultProps","withStyles","theme","light","palette","mode","bottomLineColor","display","flexWrap","flex","marginTop","minWidth","boxSizing","paddingTop","textOverflow","overflow","whiteSpace","appearance","WebkitTapHighlightColor","float","flexFlow","cursor","marginBottom","minHeight","height","paddingBottom","top","borderBottom","primary","left","bottom","content","position","right","transform","transition","transitions","create","duration","shorter","easing","easeOut","pointerEvents","borderBottomColor","main","borderBottomStyle","name","blue","EntryModal","initialState","Object","assign","useState","useTheme","fullScreen","useMediaQuery","breakpoints","down","Dialog","open","onClose","onCancel","DialogTitle","DialogContent","TextField","type","values","DialogActions","Button","onSave","ADD_ENTRY","UPDATE_ENTRY","DELETE_ENTRY","REARRANGE_ENTRY","NEW_PROJECT","COLLAPSE_EXPAND_ENTRY","EMPTY_PROJECT_TYPE","DEMO_PROJECT_TYPE","MODAL_NEW_PROJECT_NAME","MODAL_EDIT_NAME","NewProject","onSaveClick","project_type","onOk","Container","Grid","container","justifyContent","spacing","styles","project_type_card","CardActionArea","CardMedia","component","schedule_media","image","empty_schedule_svg","CardHeader","demo_schedule_svg","Modal","createTheme","mapDispatch","addEntry","updateEntry","deleteEntry","rearrangeEntry","newProject","collapseExpandEntry","connector","connect","schedule","modal","edited_entry","onModalCancel","onNewProject","useEffect","ThemeProvider","CssBaseline","female_first_names","male_first_names","last_names","getRandomLastName","Math","floor","random","getRandomScheduleEntry","min_participant","max_participant","j","project_counter","entries_count","combineReducers","action","console","log","currentEntry","currentIndex","localStorageKey","serializedState","localStorage","getItem","JSON","parse","err","loadState","middleWare","applyMiddleware","store","next","stringify","setItem","saveState","getState","createStore","rootReducer","render","StrictMode","document","getElementById","module","exports"],"mappings":"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CA,SACA,MACA,SACA,SACA,OACA,OACA,SACA,MACA,QACA,aACA,QACA,WACA,UACA,QACA,SACA,UACA,QACA,QACA,QACA,UACA,YACA,OACA,QACA,OACA,QACA,WACA,QACA,YACA,QACA,SACA,UACA,QACA,MACA,OACA,UACA,WACA,UACA,OACA,SACA,QACA,QACA,YACA,WACA,QACA,SACA,OACA,UACA,OACA,OACA,YACA,QACA,OACA,QACA,UACA,WACA,QACA,UACA,SACA,SACA,WACA,QACA,SACA,UACA,OACA,OACA,QACA,WACA,QACA,QACA,SACA,YACA,MACA,UACA,SACA,MACA,UACA,WACA,WACA,QACA,QACA,SACA,OAGIC,GAAmB,CACvB,OACA,SACA,OACA,YACA,SACA,UACA,SACA,WACA,QACA,QACA,UACA,QACA,UACA,OACA,UACA,YACA,cACA,QACA,SACA,MACA,QACA,UACA,QACA,SACA,OACA,OACA,QACA,QACA,SACA,QACA,MACA,QACA,OACA,QACA,OACA,QACA,QACA,MACA,OACA,WACA,SACA,SACA,SACA,SACA,QACA,QACA,UACA,OACA,QACA,OACA,OACA,MACA,UACA,SACA,OACA,WACA,SACA,OACA,OACA,QACA,OACA,QACA,UACA,SACA,OACA,MACA,OACA,YACA,QACA,UACA,SACA,UACA,SACA,MACA,SACA,SACA,SACA,WAGIC,GAAa,CACjB,UACA,QACA,QACA,WACA,SACA,QACA,SACA,QACA,OACA,OACA,QACA,QACA,QACA,OACA,QACA,QACA,WACA,UACA,SACA,UACA,WACA,OACA,UACA,YACA,QACA,WACA,UACA,UACA,WACA,SACA,UACA,OACA,SACA,OACA,UACA,UACA,WACA,SACA,UACA,SACA,SACA,OACA,SACA,SACA,QACA,OACA,SACA,WACA,WACA,SACA,OACA,WACA,YACA,OACA,SACA,SACA,SACA,SACA,SACA,OACA,UACA,QACA,WACA,QACA,QACA,OACA,OACA,OACA,UACA,UACA,WACA,MACA,QACA,QACA,YA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","file":"static/js/main.5134553e.chunk.js","sourcesContent":["import React from 'react';\nimport './Entry.css';\nimport clsx from 'clsx';\nimport { Draggable } from 'react-beautiful-dnd'\nimport Chip from '@material-ui/core/Chip'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport IconButton from '@material-ui/core/IconButton';\n\ninterface IProps {\n  entry_id: number,\n  index: number,\n  title: string,\n  participants?: string[],\n  bad_participants?: string[],\n  expanded: boolean,\n  onClick?: () => void,\n  onCollapseExpand?: () => void,\n}\n\nexport default function Entry(props: IProps) {\n  let bad_participants: { [id: string]: boolean } = {};\n  let style = {};\n  if (props.bad_participants && props.bad_participants.length) {\n    props.bad_participants.forEach((item: string) => { bad_participants[item] = true })\n    style = { backgroundColor: \"#fdd\" };\n  }\n  const handleExpandClick = (e:React.MouseEvent) => {\n    e.stopPropagation();\n    props.onCollapseExpand && props.onCollapseExpand()\n  };\n  return (\n    <Draggable draggableId={props.entry_id.toString()} index={props.index}>\n      {(provided) => (\n        <Card className=\"Entry\" onClick={props.onClick} {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\n          <CardContent style={style}>\n            <div className=\"Entry-title\">\n            <IconButton\n            className={clsx('Entry-expand', {\n              'Entry-expandOpen': props.expanded,\n            })}\n            onClick={handleExpandClick}\n            aria-expanded={props.expanded}\n            aria-label=\"show more\"\n          >\n            <ExpandMoreIcon />\n          </IconButton>{props.title}</div>\n            <Collapse in={props.expanded} timeout=\"auto\" unmountOnExit>\n              <div className=\"Entry-participant-list\">\n              {\n                props.participants && props.participants.map(participant => {\n                  const color = bad_participants[participant] ? \"secondary\" : \"primary\";\n                  return <Chip label={participant} color={color} key={participant} />;\n                })\n              }\n              </div>\n            </Collapse>\n          </CardContent>\n        </Card>\n      )}\n    </Draggable>\n  )\n}","import React from 'react';\nimport './EntryList.css';\nimport Entry from './Entry'\nimport { EntryType } from '../store/types'\nimport { DragDropContext, DropResult, Droppable } from 'react-beautiful-dnd'\n\ninterface IProps {\n  entries: EntryType[],\n  onSelect?: (id: number) => void,\n  onCollapseExpand?: (entry: EntryType) => void,\n  onRearrange?: (id: number, index: number) => void\n}\n\nfunction BadParticipantsForEntries(entries: EntryType[]): string[][] {\n  let prevEntry: EntryType | undefined = undefined;\n  let result: string[][] = [];\n  entries.forEach((entry: EntryType) => {\n    result.push([]);\n    if (prevEntry) {\n      entry.participants.forEach((participant) => {\n        if (prevEntry && prevEntry.participants.indexOf(participant) !== -1) {\n          result[result.length - 1].push(participant);\n          result[result.length - 2].push(participant);\n        }\n      })\n    }\n    prevEntry = entry;\n  });\n  return result;\n}\n\nexport default function EntryList(props: IProps) {\n  function onDragEnd(result: DropResult) {\n    const { destination, source, draggableId } = result;\n    if (!destination || !props.onRearrange) {\n      return;\n    }\n\n    if (destination.index === source.index) {\n      return;\n    }\n\n    props.onRearrange(+draggableId, destination.index)\n  }\n\n  const bad_participants = BadParticipantsForEntries(props.entries);\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Droppable droppableId=\"1\">\n        {provided => (\n          <div\n            className=\"EntryList\"\n            ref={provided.innerRef}\n            {...provided.droppableProps}\n          >\n            {\n              props.entries && props.entries.map((entry, index) => {\n                return <Entry\n                  entry_id={entry.id}\n                  index={index}\n                  title={entry.title}\n                  key={\"entry_\" + entry.title}\n                  participants={entry.participants}\n                  bad_participants={bad_participants[index]}\n                  expanded={entry.expanded}\n                  onClick={() => props.onSelect && props.onSelect(entry.id)}\n                  onCollapseExpand={() => props.onCollapseExpand && props.onCollapseExpand(entry)}\n                />;\n              })\n            }\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    </DragDropContext>\n  )\n}","/**\n * Notice: Some code was adapted from Material-UI's text field.\n *         Copyright (c) 2014 Call-Em-All (https://github.com/callemall/material-ui)\n */\n import React from 'react'\n import ReactDOM from 'react-dom'\n import PropTypes from 'prop-types'\n import Input from '@material-ui/core/Input'\n import FilledInput from '@material-ui/core/FilledInput/FilledInput'\n import OutlinedInput from '@material-ui/core/OutlinedInput'\n import InputLabel from '@material-ui/core/InputLabel'\n import Chip from '@material-ui/core/Chip'\n import withStyles from '@material-ui/styles/withStyles'\n import blue from '@material-ui/core/colors/blue'\n import FormControl from '@material-ui/core/FormControl'\n import FormHelperText from '@material-ui/core/FormHelperText'\n import cx from 'classnames'\n \n const variantComponent = {\n   standard: Input,\n   filled: FilledInput,\n   outlined: OutlinedInput\n }\n \n const styles = (theme) => {\n   const light = theme.palette.mode === 'light'\n   const bottomLineColor = light ? 'rgba(0, 0, 0, 0.42)' : 'rgba(255, 255, 255, 0.7)'\n \n   return {\n     root: {},\n     inputRoot: {\n       display: 'inline-flex',\n       flexWrap: 'wrap',\n       flex: 1,\n       marginTop: 0,\n       minWidth: 70,\n       '&$outlined,&$filled': {\n         boxSizing: 'border-box'\n       },\n       '&$outlined': {\n         paddingTop: 14\n       },\n       '&$filled': {\n         paddingTop: 28\n       }\n     },\n     input: {\n       display: 'inline-block',\n       textOverflow: 'ellipsis',\n       overflow: 'hidden',\n       whiteSpace: 'nowrap',\n       appearance: 'none', // Remove border in Safari, doesn't seem to break anything in other browsers\n       WebkitTapHighlightColor: 'rgba(0,0,0,0)', // Remove mobile color flashing (deprecated style).\n       float: 'left',\n       flex: 1\n     },\n     chipContainer: {\n       display: 'flex',\n       flexFlow: 'row wrap',\n       cursor: 'text',\n       marginBottom: -2,\n       minHeight: 40,\n       '&$labeled&$standard': {\n         marginTop: 18\n       }\n     },\n     outlined: {\n       '& input': {\n         height: 16,\n         paddingTop: 4,\n         paddingBottom: 12,\n         marginTop: 4,\n         marginBottom: 4\n       }\n     },\n     standard: {},\n     filled: {\n       '& input': {\n         height: 22,\n         marginBottom: 4,\n         marginTop: 4,\n         paddingTop: 0\n       },\n       '$marginDense & input': {\n         height: 26\n       }\n     },\n     labeled: {},\n     label: {\n       top: 4,\n       '&$outlined&:not($labelShrink)': {\n         top: 2,\n         '$marginDense &': {\n           top: 5\n         }\n       },\n       '&$filled&:not($labelShrink)': {\n         top: 15,\n         '$marginDense &': {\n           top: 20\n         }\n       }\n     },\n     labelShrink: {\n       top: 0\n     },\n     helperText: {\n       marginBottom: -20\n     },\n     focused: {},\n     disabled: {},\n     underline: {\n       '&:after': {\n         borderBottom: `2px solid ${theme.palette.primary[light ? 'dark' : 'light']}`,\n         left: 0,\n         bottom: 0,\n         // Doing the other way around crash on IE 11 \"''\" https://github.com/cssinjs/jss/issues/242\n         content: '\"\"',\n         position: 'absolute',\n         right: 0,\n         transform: 'scaleX(0)',\n         transition: theme.transitions.create('transform', {\n           duration: theme.transitions.duration.shorter,\n           easing: theme.transitions.easing.easeOut\n         }),\n         pointerEvents: 'none' // Transparent to the hover style.\n       },\n       '&$focused:after': {\n         transform: 'scaleX(1)'\n       },\n       '&$error:after': {\n         borderBottomColor: theme.palette.error.main,\n         transform: 'scaleX(1)' // error is always underlined in red\n       },\n       '&:before': {\n         borderBottom: `1px solid ${bottomLineColor}`,\n         left: 0,\n         bottom: 0,\n         // Doing the other way around crash on IE 11 \"''\" https://github.com/cssinjs/jss/issues/242\n         content: '\"\\\\00a0\"',\n         position: 'absolute',\n         right: 0,\n         transition: theme.transitions.create('border-bottom-color', {\n           duration: theme.transitions.duration.shorter\n         }),\n         pointerEvents: 'none' // Transparent to the hover style.\n       },\n       '&:hover:not($disabled):not($focused):not($error):before': {\n         borderBottom: `2px solid ${theme.palette.text.primary}`,\n         // Reset on touch devices, it doesn't add specificity\n         '@media (hover: none)': {\n           borderBottom: `1px solid ${bottomLineColor}`\n         }\n       },\n       '&$disabled:before': {\n         borderBottomStyle: 'dotted'\n       }\n     },\n     error: {\n       '&:after': {\n         backgroundColor: theme.palette.error.main,\n         transform: 'scaleX(1)' // error is always underlined in red\n       }\n     },\n     chip: {\n       margin: '0 8px 8px 0',\n       float: 'left'\n     },\n     marginDense: {}\n   }\n }\n \n const keyCodes = {\n   BACKSPACE: 8,\n   DELETE: 46,\n   LEFT_ARROW: 37,\n   RIGHT_ARROW: 39\n }\n \n class ChipInput extends React.Component {\n   state = {\n     chips: [],\n     errorText: undefined,\n     focusedChip: null,\n     inputValue: '',\n     isClean: true,\n     isFocused: false,\n     chipsUpdated: false,\n     prevPropsValue: []\n   }\n \n   constructor (props) {\n     super(props)\n     if (props.defaultValue) {\n       this.state.chips = props.defaultValue\n     }\n     this.labelRef = React.createRef()\n     this.input = React.createRef()\n   }\n \n   componentDidMount () {\n     if (this.props.variant === 'outlined') {\n       this.labelNode = ReactDOM.findDOMNode(this.labelRef.current)\n       this.forceUpdate()\n     }\n   }\n \n   componentWillUnmount () {\n     clearTimeout(this.inputBlurTimeout)\n   }\n \n   static getDerivedStateFromProps (props, state) {\n     let newState = null\n \n     if (props.value && props.value.length !== state.prevPropsValue.length) {\n       newState = { prevPropsValue: props.value }\n       if (props.clearInputValueOnChange) {\n         newState.inputValue = ''\n       }\n     }\n \n     // if change detection is only needed for clearInputValueOnChange\n     if (props.clearInputValueOnChange && props.value && props.value.length !== state.prevPropsValue.length) {\n       newState = { prevPropsValue: props.value, inputValue: '' }\n     }\n \n     if (props.disabled) {\n       newState = { ...newState, focusedChip: null }\n     }\n \n     if (!state.chipsUpdated && props.defaultValue) {\n       newState = { ...newState, chips: props.defaultValue }\n     }\n \n     return newState\n   }\n \n   /**\n    * Blurs this component.\n    * @public\n    */\n   blur () {\n     if (this.input) this.actualInput.blur()\n   }\n \n   /**\n    * Focuses this component.\n    * @public\n    */\n   focus = () => {\n     this.actualInput.focus()\n     if (this.state.focusedChip != null) {\n       this.setState({ focusedChip: null })\n     }\n   }\n \n   handleInputBlur = (event) => {\n     if (this.props.onBlur) {\n       this.props.onBlur(event)\n     }\n     this.setState({ isFocused: false })\n     if (this.state.focusedChip != null) {\n       this.setState({ focusedChip: null })\n     }\n     const value = event.target.value\n     let addChipOptions\n     switch (this.props.blurBehavior) {\n       case 'add-or-clear':\n         addChipOptions = { clearInputOnFail: true }\n         // falls through\n       case 'add':\n         if (this.props.delayBeforeAdd) {\n           // Lets assume that we only want to add the existing content as chip, when\n           // another event has not added a chip within 200ms .\n           // e.g. onSelection Callback in Autocomplete case\n           const numChipsBefore = (this.props.value || this.state.chips).length\n           this.inputBlurTimeout = setTimeout(() => {\n             const numChipsAfter = (this.props.value || this.state.chips).length\n             if (numChipsBefore === numChipsAfter) {\n               this.handleAddChip(value, addChipOptions)\n             } else {\n               this.clearInput()\n             }\n           }, 150)\n         } else {\n           this.handleAddChip(value, addChipOptions)\n         }\n         break\n       case 'clear':\n         this.clearInput()\n         break\n       default:\n           break;\n     }\n   }\n \n   handleInputFocus = (event) => {\n     this.setState({ isFocused: true })\n     if (this.props.onFocus) {\n       this.props.onFocus(event)\n     }\n   }\n \n   handleKeyDown = (event) => {\n     const { focusedChip } = this.state\n     this._keyPressed = false\n     this._preventChipCreation = false\n     if (this.props.onKeyDown) {\n       // Needed for arrow controls on menu in autocomplete scenario\n       this.props.onKeyDown(event)\n       // Check if the callback marked the event as isDefaultPrevented() and skip further actions\n       // enter key for example should not always add the current value of the inputField\n       if (event.isDefaultPrevented()) {\n         return\n       }\n     }\n     const chips = this.props.value || this.state.chips\n     if (this.props.newChipKeyCodes.indexOf(event.keyCode) >= 0 || this.props.newChipKeys.indexOf(event.key) >= 0) {\n       const result = this.handleAddChip(event.target.value)\n       if (result !== false) {\n         event.preventDefault()\n       }\n       return\n     }\n \n     switch (event.keyCode) {\n       case keyCodes.BACKSPACE:\n         if (event.target.value === '') {\n           if (focusedChip != null) {\n             this.handleDeleteChip(chips[focusedChip], focusedChip)\n             if (focusedChip > 0) {\n               this.setState({ focusedChip: focusedChip - 1 })\n             }\n           } else {\n             this.setState({ focusedChip: chips.length - 1 })\n           }\n         }\n         break\n       case keyCodes.DELETE:\n         if (event.target.value === '' && focusedChip != null) {\n           this.handleDeleteChip(chips[focusedChip], focusedChip)\n           if (focusedChip <= chips.length - 1) {\n             this.setState({ focusedChip })\n           }\n         }\n         break\n       case keyCodes.LEFT_ARROW:\n         if (focusedChip == null && event.target.value === '' && chips.length) {\n           this.setState({ focusedChip: chips.length - 1 })\n         } else if (focusedChip != null && focusedChip > 0) {\n           this.setState({ focusedChip: focusedChip - 1 })\n         }\n         break\n       case keyCodes.RIGHT_ARROW:\n         if (focusedChip != null && focusedChip < chips.length - 1) {\n           this.setState({ focusedChip: focusedChip + 1 })\n         } else {\n           this.setState({ focusedChip: null })\n         }\n         break\n       default:\n         this.setState({ focusedChip: null })\n         break\n     }\n   }\n \n   handleKeyUp = (event) => {\n     if (!this._preventChipCreation && (this.props.newChipKeyCodes.indexOf(event.keyCode) >= 0 || this.props.newChipKeys.indexOf(event.key) >= 0) && this._keyPressed) {\n       this.clearInput()\n     } else {\n       this.updateInput(event.target.value)\n     }\n     if (this.props.onKeyUp) { this.props.onKeyUp(event) }\n   }\n \n   handleKeyPress = (event) => {\n     this._keyPressed = true\n     if (this.props.onKeyPress) { this.props.onKeyPress(event) }\n   }\n \n   handleUpdateInput = (e) => {\n     if (this.props.inputValue == null) {\n       this.updateInput(e.target.value)\n     }\n \n     if (this.props.onUpdateInput) {\n       this.props.onUpdateInput(e)\n     }\n   }\n \n   /**\n    * Handles adding a chip.\n    * @param {string|object} chip Value of the chip, either a string or an object (if dataSourceConfig is set)\n    * @param {object=} options Additional options\n    * @param {boolean=} options.clearInputOnFail If `true`, and `onBeforeAdd` returns `false`, clear the input\n    * @returns True if the chip was added (or at least `onAdd` was called), false if adding the chip was prevented\n    */\n   handleAddChip (chip, options) {\n     if (this.props.onBeforeAdd && !this.props.onBeforeAdd(chip)) {\n       this._preventChipCreation = true\n       if (options != null && options.clearInputOnFail) {\n         this.clearInput()\n       }\n       return false\n     }\n     this.clearInput()\n     const chips = this.props.value || this.state.chips\n \n     if (this.props.dataSourceConfig) {\n       if (typeof chip === 'string') {\n         chip = {\n           [this.props.dataSourceConfig.text]: chip,\n           [this.props.dataSourceConfig.value]: chip\n         }\n       }\n \n       if (this.props.allowDuplicates || !chips.some((c) => c[this.props.dataSourceConfig.value] === chip[this.props.dataSourceConfig.value])) {\n         if (this.props.value && this.props.onAdd) {\n           this.props.onAdd(chip)\n         } else {\n           this.updateChips([...this.state.chips, chip])\n         }\n       }\n       return true\n     }\n \n     if (chip.trim().length > 0) {\n       if (this.props.allowDuplicates || chips.indexOf(chip) === -1) {\n         if (this.props.value && this.props.onAdd) {\n           this.props.onAdd(chip)\n         } else {\n           this.updateChips([...this.state.chips, chip])\n         }\n       }\n       return true\n     }\n     return false\n   }\n \n   handleDeleteChip (chip, i) {\n     if (!this.props.value) {\n       const chips = this.state.chips.slice()\n       const changed = chips.splice(i, 1) // remove the chip at index i\n       if (changed) {\n         let focusedChip = this.state.focusedChip\n         if (this.state.focusedChip === i) {\n           focusedChip = null\n         } else if (this.state.focusedChip > i) {\n           focusedChip = this.state.focusedChip - 1\n         }\n         this.updateChips(chips, { focusedChip })\n       }\n     } else if (this.props.onDelete) {\n       this.props.onDelete(chip, i)\n     }\n   }\n \n   updateChips (chips, additionalUpdates = {}) {\n     this.setState({ chips, chipsUpdated: true, ...additionalUpdates })\n     if (this.props.onChange) {\n       this.props.onChange(chips)\n     }\n   }\n \n   /**\n    * Clears the text field for adding new chips.\n    * This only works in uncontrolled input mode, i.e. if the inputValue prop is not used.\n    * @public\n    */\n   clearInput () {\n     this.updateInput('')\n   }\n \n   updateInput (value) {\n     this.setState({ inputValue: value })\n   }\n \n   /**\n    * Set the reference to the actual input, that is the input of the Input.\n    * @param {object} ref - The reference\n    */\n   setActualInputRef = (ref) => {\n     this.actualInput = ref\n     if (this.props.inputRef) {\n       this.props.inputRef(ref)\n     }\n   }\n \n   render () {\n     const {\n       allowDuplicates,\n       alwaysShowPlaceholder,\n       blurBehavior,\n       children,\n       chipRenderer = defaultChipRenderer,\n       classes,\n       className,\n       clearInputValueOnChange,\n       dataSource,\n       dataSourceConfig,\n       defaultValue,\n       delayBeforeAdd,\n       disabled,\n       disableUnderline,\n       error,\n       filter,\n       FormHelperTextProps,\n       fullWidth,\n       fullWidthInput,\n       helperText,\n       id,\n       InputProps = {},\n       inputRef,\n       InputLabelProps = {},\n       inputValue,\n       label,\n       newChipKeyCodes,\n       newChipKeys,\n       onBeforeAdd,\n       onAdd,\n       onBlur,\n       onDelete,\n       onChange,\n       onFocus,\n       onKeyDown,\n       onKeyPress,\n       onKeyUp,\n       onUpdateInput,\n       placeholder,\n       readOnly,\n       required,\n       rootRef,\n       value,\n       variant,\n       ...other\n     } = this.props\n \n     const chips = value || this.state.chips\n     const actualInputValue = inputValue != null ? inputValue : this.state.inputValue\n \n     const hasInput = (this.props.value || actualInputValue).length > 0 || actualInputValue.length > 0\n     const shrinkFloatingLabel = InputLabelProps.shrink != null\n       ? InputLabelProps.shrink\n       : (label != null && (hasInput || this.state.isFocused || chips.length > 0))\n \n     const chipComponents = chips.map((chip, i) => {\n       const value = dataSourceConfig ? chip[dataSourceConfig.value] : chip\n       return chipRenderer(\n         {\n           value,\n           text: dataSourceConfig ? chip[dataSourceConfig.text] : chip,\n           chip,\n           isDisabled: !!disabled,\n           isReadOnly: readOnly,\n           isFocused: this.state.focusedChip === i,\n           handleClick: () => this.setState({ focusedChip: i }),\n           handleDelete: () => this.handleDeleteChip(chip, i),\n           className: classes.chip\n         },\n         i\n       )\n     })\n \n     const InputMore = {}\n     InputMore.label = this.props.label\n     if (variant === 'outlined') {\n       InputMore.notched = shrinkFloatingLabel\n       /*InputMore.labelWidth =\n         (shrinkFloatingLabel && this.labelNode && this.labelNode.offsetWidth) ||\n         0*/\n     }\n \n     if (variant !== 'standard') {\n       InputMore.startAdornment = (\n         <React.Fragment>{chipComponents}</React.Fragment>\n       )\n     } else {\n       InputProps.disableUnderline = true\n     }\n \n     const InputComponent = variantComponent[variant]\n \n     return (\n       <FormControl\n         ref={rootRef}\n         fullWidth={fullWidth}\n         className={cx(className, classes.root, {\n           [classes.marginDense]: other.margin === 'dense'\n         })}\n         error={error}\n         required={chips.length > 0 ? undefined : required}\n         onClick={this.focus}\n         disabled={disabled}\n         variant={variant}\n         {...other}\n       >\n         {label && (\n           <InputLabel\n             htmlFor={id}\n             classes={{ root: cx(classes[variant], classes.label), shrink: classes.labelShrink }}\n             shrink={shrinkFloatingLabel}\n             focused={this.state.isFocused}\n             variant={variant}\n             ref={this.labelRef}\n             required={required}\n             {...InputLabelProps}\n           >\n             {label}\n           </InputLabel>\n         )}\n         <div\n           className={cx(\n             classes[variant],\n             classes.chipContainer,\n             {\n               [classes.focused]: this.state.isFocused,\n               [classes.underline]: !disableUnderline && variant === 'standard',\n               [classes.disabled]: disabled,\n               [classes.labeled]: label != null,\n               [classes.error]: error\n             })}\n         >\n           {variant === 'standard' && chipComponents}\n           <InputComponent\n             ref={this.input}\n             classes={{\n               input: cx(classes.input, classes[variant]),\n               root: cx(classes.inputRoot, classes[variant])\n             }}\n             id={id}\n             value={actualInputValue}\n             onChange={this.handleUpdateInput}\n             onKeyDown={this.handleKeyDown}\n             onKeyPress={this.handleKeyPress}\n             onKeyUp={this.handleKeyUp}\n             onFocus={this.handleInputFocus}\n             onBlur={this.handleInputBlur}\n             inputRef={this.setActualInputRef}\n             disabled={disabled}\n             fullWidth={fullWidthInput}\n             placeholder={(!hasInput && (shrinkFloatingLabel || label == null)) || alwaysShowPlaceholder ? placeholder : null}\n             readOnly={readOnly}\n             {...InputProps}\n             {...InputMore}\n           />\n         </div>\n         {helperText && (\n           <FormHelperText\n             {...FormHelperTextProps}\n             className={FormHelperTextProps ? cx(FormHelperTextProps.className, classes.helperText) : classes.helperText}\n           >\n             {helperText}\n           </FormHelperText>\n         )}\n       </FormControl>\n     )\n   }\n }\n \n ChipInput.propTypes = {\n   /** Allows duplicate chips if set to true. */\n   allowDuplicates: PropTypes.bool,\n   /** If true, the placeholder will always be visible. */\n   alwaysShowPlaceholder: PropTypes.bool,\n   /** Behavior when the chip input is blurred: `'clear'` clears the input, `'add'` creates a chip and `'ignore'` keeps the input. */\n   blurBehavior: PropTypes.oneOf(['clear', 'add', 'add-or-clear', 'ignore']),\n   /** A function of the type `({ value, text, chip, isFocused, isDisabled, isReadOnly, handleClick, handleDelete, className }, key) => node` that returns a chip based on the given properties. This can be used to customize chip styles.  Each item in the `dataSource` array will be passed to `chipRenderer` as arguments `chip`, `value` and `text`. If `dataSource` is an array of objects and `dataSourceConfig` is present, then `value` and `text` will instead correspond to the object values defined in `dataSourceConfig`. If `dataSourceConfig` is not set and `dataSource` is an array of objects, then a custom `chipRenderer` must be set. `chip` is always the raw value from `dataSource`, either an object or a string. */\n   chipRenderer: PropTypes.func,\n   /** Whether the input value should be cleared if the `value` prop is changed. */\n   clearInputValueOnChange: PropTypes.bool,\n   /** Data source for auto complete. This should be an array of strings or objects. */\n   dataSource: PropTypes.array,\n   /** Config for objects list dataSource, e.g. `{ text: 'text', value: 'value' }`. If not specified, the `dataSource` must be a flat array of strings or a custom `chipRenderer` must be set to handle the objects. */\n   dataSourceConfig: PropTypes.shape({\n     text: PropTypes.string.isRequired,\n     value: PropTypes.string.isRequired\n   }),\n   /** The chips to display by default (for uncontrolled mode). */\n   defaultValue: PropTypes.array,\n   /** Whether to use `setTimeout` to delay adding chips in case other input events like `onSelection` need to fire first */\n   delayBeforeAdd: PropTypes.bool,\n   /** Disables the chip input if set to true. */\n   disabled: PropTypes.bool,\n   /** Disable the input underline. Only valid for 'standard' variant */\n   disableUnderline: PropTypes.bool,\n   /** Props to pass through to the `FormHelperText` component. */\n   FormHelperTextProps: PropTypes.object,\n   /** If true, the chip input will fill the available width. */\n   fullWidth: PropTypes.bool,\n   /** If true, the input field will always be below the chips and fill the available space. By default, it will try to be beside the chips. */\n   fullWidthInput: PropTypes.bool,\n   /** Helper text that is displayed below the input. */\n   helperText: PropTypes.node,\n   /** Props to pass through to the `InputLabel`. */\n   InputLabelProps: PropTypes.object,\n   /** Props to pass through to the `Input`. */\n   InputProps: PropTypes.object,\n   /** Use this property to pass a ref callback to the native input component. */\n   inputRef: PropTypes.func,\n   /** The input value (enables controlled mode for the text input if set). */\n   inputValue: PropTypes.string,\n   /* The content of the floating label. */\n   label: PropTypes.node,\n   /** The key codes (`KeyboardEvent.keyCode`) used to determine when to create a new chip. */\n   newChipKeyCodes: PropTypes.arrayOf(PropTypes.number),\n   /** The keys (`KeyboardEvent.key`) used to determine when to create a new chip. */\n   newChipKeys: PropTypes.arrayOf(PropTypes.string),\n   /** Callback function that is called when a new chip was added (in controlled mode). */\n   onAdd: PropTypes.func,\n   /** Callback function that is called with the chip to be added and should return true to add the chip or false to prevent the chip from being added without clearing the text input. */\n   onBeforeAdd: PropTypes.func,\n   /** Callback function that is called when the chips change (in uncontrolled mode). */\n   onChange: PropTypes.func,\n   /** Callback function that is called when a new chip was removed (in controlled mode). */\n   onDelete: PropTypes.func,\n   /** Callback function that is called when the input changes. */\n   onUpdateInput: PropTypes.func,\n   /** A placeholder that is displayed if the input has no values. */\n   placeholder: PropTypes.string,\n   /** Makes the chip input read-only if set to true. */\n   readOnly: PropTypes.bool,\n   /** The chips to display (enables controlled mode if set). */\n   value: PropTypes.array,\n   /** The variant of the Input component */\n   variant: PropTypes.oneOf(['outlined', 'standard', 'filled'])\n }\n \n ChipInput.defaultProps = {\n   allowDuplicates: false,\n   blurBehavior: 'clear',\n   clearInputValueOnChange: false,\n   delayBeforeAdd: false,\n   disableUnderline: false,\n   newChipKeyCodes: [13],\n   newChipKeys: ['Enter'],\n   variant: 'standard'\n }\n \n export default withStyles(styles, { name: 'WAMuiChipInput' })(ChipInput)\n \n export const defaultChipRenderer = ({ value, text, isFocused, isDisabled, isReadOnly, handleClick, handleDelete, className }, key) => (\n   <Chip\n     key={key}\n     className={className}\n     style={{\n       pointerEvents: isDisabled || isReadOnly ? 'none' : undefined,\n       backgroundColor: isFocused ? blue[300] : undefined\n     }}\n     onClick={handleClick}\n     onDelete={handleDelete}\n     label={text}\n   />\n )","import React, { useState, ChangeEvent } from 'react';\nimport { EntryType } from '../store/types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport TextField from '@material-ui/core/TextField';\nimport ChipInput from './ChipInput';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\n\ntype EntryModalProps = {\n  open: boolean,\n  entry?: EntryType,\n  onCancel?: () => void,\n  onSave?: (entry: EntryType) => void,\n  onDelete?: (entry: EntryType) => void,\n}\n\nexport default function EntryModal(props: EntryModalProps) {\n  const initialState = props.entry ? Object.assign({}, props.entry) : { id: 0, title: '', participants: [], expanded: true };\n  const [state, setState] = useState(initialState);\n\n  function onTitleChangeHandler(event: ChangeEvent<HTMLInputElement>) {\n    setState({ ...state, title: event.target.value });\n  }\n\n  function onParticipantsChange(values: string[]) {\n    setState({ ...state, participants: values });\n  }\n\n  function onSaveClick() {\n    props.onSave && props.onSave(state);\n    setState({...state, id: 0, title: '', participants: []});\n  }\n\n  function onDeleteClick() {\n    props.onDelete && props.onDelete(state);\n  }\n\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  return (\n    <Dialog\n      open={props.open}\n      fullScreen={fullScreen}\n      onClose={props.onCancel}\n    >\n      <DialogTitle>\n        {\n          state.id === 0 ? 'Добавить элемент' : 'Редактировать элемент'\n        }\n      </DialogTitle>\n      <DialogContent>\n        <TextField\n          margin=\"dense\"\n          label=\"Название:\"\n          type=\"text\"\n          fullWidth\n          value={state.title}\n          onChange={onTitleChangeHandler}\n        />\n        <ChipInput\n          label=\"Участники:\"\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          defaultValue={state.participants}\n          onChange={onParticipantsChange}\n        />\n      </DialogContent>\n      <DialogActions>\n        {\n          state.id !== 0 &&\n          <Button onClick={onDeleteClick} color=\"secondary\">\n            Delete\n          </Button>\n        }\n        <Button onClick={props.onCancel}>\n          Close\n        </Button>\n        <Button onClick={onSaveClick}>\n          Save\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}","export const ADD_ENTRY = 'ADD_ENTRY';\nexport const UPDATE_ENTRY = 'UPDATE_ENTRY';\nexport const DELETE_ENTRY = 'DELETE_ENTRY';\nexport const REARRANGE_ENTRY = 'REARRANGE_ENTRY';\nexport const NEW_PROJECT = 'NEW_PROJECT';\nexport const COLLAPSE_EXPAND_ENTRY = 'COLLAPSE_EXPAND_ENTRY';\n\nexport const EMPTY_PROJECT_TYPE = 'EMPTY_PROJECT';\nexport const DEMO_PROJECT_TYPE = 'DEMO_PROJECT';\nexport type ProjectType = typeof EMPTY_PROJECT_TYPE | typeof DEMO_PROJECT_TYPE;\n\nexport const MODAL_VOID_NAME = '';\nexport const MODAL_NEW_PROJECT_NAME = 'NewProject';\nexport const MODAL_EDIT_NAME = 'Edit';\nexport type ModalType = typeof MODAL_NEW_PROJECT_NAME | typeof MODAL_EDIT_NAME | typeof MODAL_VOID_NAME;\n\nexport interface EntryCollapseExpandAction {\n  type: typeof COLLAPSE_EXPAND_ENTRY\n  entry: EntryType\n}\n\nexport interface EntryAddAction {\n  type: typeof ADD_ENTRY\n  entry: EntryType\n}\n\nexport interface EntryUpdateAction {\n  type: typeof UPDATE_ENTRY\n  entry: EntryType\n}\n\nexport interface EntryDeleteAction {\n  type: typeof DELETE_ENTRY\n  id: number\n}\n\nexport interface EntryRearrangeAction {\n  type: typeof REARRANGE_ENTRY\n  id: number\n  index: number\n}\n\nexport interface NewProjectEntryAction {\n  type: typeof NEW_PROJECT,\n  project_type: ProjectType,\n}\n\nexport type EntriesActionTypes = EntryCollapseExpandAction | EntryAddAction | EntryUpdateAction | EntryDeleteAction | EntryRearrangeAction | NewProjectEntryAction;\n\nexport interface EntryType {\n  id: number\n  title: string\n  participants: string[]\n  expanded: boolean\n}\n\nexport interface EntryListType {\n  title: string,\n  entries: EntryType[],\n}\n\nexport interface RootState {\n  schedule: EntryListType\n}","export default __webpack_public_path__ + \"static/media/empty_schedule.b845eebc.svg\";","export default __webpack_public_path__ + \"static/media/demo_schedule.25022235.svg\";","import React from 'react';\nimport { ProjectType, DEMO_PROJECT_TYPE, EMPTY_PROJECT_TYPE } from '../../store/types';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport empty_schedule_svg from './images/empty_schedule.svg'\nimport demo_schedule_svg from './images/demo_schedule.svg'\nimport styles from \"./styles.module.css\";\n\ninterface ModalProps {\n  onOk?: (project_type: ProjectType) => void,\n}\n\nexport default function NewProject(props: ModalProps) {\n\n  function onSaveClick(project_type: ProjectType) {\n    props.onOk && props.onOk(project_type);\n  }\n\n  return (\n    <Container>\n      <h1>Create a new schedule project</h1>\n    <Grid container justifyContent=\"center\" spacing={10}>\n      <Grid item>\n        <Card className={styles.project_type_card} onClick={() => { onSaveClick(EMPTY_PROJECT_TYPE) }}>\n          <CardActionArea>\n            <CardMedia\n              component=\"img\"\n              className={styles.schedule_media}\n              image={empty_schedule_svg}\n              title=\"Empty schedule image\"\n            />\n            <CardHeader title=\"Blank\" />\n            <CardContent>\n              Create blank schedule.\n              </CardContent>\n          </CardActionArea>\n        </Card>\n      </Grid>\n      <Grid item>\n        <Card className={styles.project_type_card} onClick={() => onSaveClick(DEMO_PROJECT_TYPE)}>\n          <CardActionArea>\n            <CardMedia\n              className={styles.schedule_media}\n              image={demo_schedule_svg}\n              title=\"Demo schedule image\"\n            />\n            <CardHeader title=\"Demo\" />\n            <CardContent>\n              Create demo schedule with random data.\n              </CardContent>\n          </CardActionArea>\n        </Card>\n      </Grid>\n    </Grid>\n    </Container>\n  );\n}","import React, { FunctionComponent } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\n\ninterface ModalProps {\n  open: boolean,\n  title: string,\n  onCancel?: () => void,\n}\n\nexport const Modal: FunctionComponent<ModalProps> = (props) => {\n\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  return (\n    <Dialog\n      open={props.open}\n      fullScreen={fullScreen}\n      onClose={props.onCancel}\n    >\n      <DialogTitle>\n        {props.title}\n      </DialogTitle>\n      <DialogContent>\n        {props.children}\n      </DialogContent>\n    </Dialog>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport EntryList from './components/EntryList';\nimport EntryModal from './components/EntryModal';\nimport NewProject from './components/NewProject';\nimport { Modal } from './components/Modal';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { RootState, EntryType, ProjectType, MODAL_EDIT_NAME, MODAL_NEW_PROJECT_NAME, MODAL_VOID_NAME } from './store/types'\nimport { collapseExpandEntryAction, addEntryAction, updateEntryAction, deleteEntryAction, rearrangeEntryAction, newProjectAction } from './store/actions'\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { createTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\n\nconst theme = createTheme();\n\nconst mapState = (state: RootState) => ({\n  schedule: state.schedule,\n});\n\nconst mapDispatch = {\n  addEntry: addEntryAction,\n  updateEntry: updateEntryAction,\n  deleteEntry: deleteEntryAction,\n  rearrangeEntry: rearrangeEntryAction,\n  newProject: newProjectAction,\n  collapseExpandEntry: collapseExpandEntryAction,\n}\n\nconst connector = connect(mapState, mapDispatch)\n\ntype Props = ConnectedProps<typeof connector>\n\nfunction getEmptyEntry(): EntryType {\n  return {\n    id: 0,\n    title: '',\n    participants: [],\n    expanded: true,\n  }\n}\n\nfunction App(props: Props) {\n  const [state, setState] = useState({\n    modal: MODAL_VOID_NAME,\n    schedule: { ...props.schedule },\n    edited_entry: getEmptyEntry(),\n  });\n\n  useEffect(() => {\n    setState({\n      ...state,\n      schedule: { ...props.schedule },\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props])\n\n  function onEntrySelect(id: number) {\n    for (let i = 0; i < state.schedule.entries.length; i++) {\n      if (state.schedule.entries[i].id === id) {\n        setState({\n          ...state,\n          modal: MODAL_EDIT_NAME,\n          edited_entry: { ...state.schedule.entries[i] },\n        })\n      }\n    }\n  }\n\n  function onModalCancel() {\n    setState({ ...state, modal: MODAL_VOID_NAME });\n  }\n\n  function onModalSave(entry: EntryType) {\n    if (entry.title.length > 0) {\n      setState({\n        ...state,\n        modal: MODAL_VOID_NAME,\n      });\n      if (entry.id === 0) {\n        props.addEntry(entry);\n      } else {\n        props.updateEntry(entry);\n      }\n    }\n  }\n\n  function onModalDelete(entry: EntryType) {\n    setState({\n      ...state,\n      modal: MODAL_VOID_NAME\n    });\n    props.deleteEntry(entry);\n  }\n\n  function onAddButtonClick() {\n    setState({\n      ...state,\n      modal: MODAL_EDIT_NAME,\n      edited_entry: getEmptyEntry(),\n    });\n  }\n\n  function onNewProjectButtonClick() {\n    setState({\n      ...state,\n      modal: MODAL_NEW_PROJECT_NAME,\n    });\n  }\n\n  function onNewProject(project_type: ProjectType) {\n    setState({\n      ...state,\n      modal: MODAL_VOID_NAME\n    });\n    props.newProject(project_type);\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n    <div className=\"App\">\n      {\n        state.schedule.title === \"\" ?\n          <NewProject onOk={onNewProject} />\n          :\n          <>\n            <header className=\"App-header\">\n              <h1>{state.schedule.title}</h1>\n            </header>\n            <Button variant=\"contained\" color=\"primary\" onClick={onAddButtonClick}>Add entry</Button>\n            <EntryList\n              entries={state.schedule.entries}\n              onSelect={onEntrySelect}\n              onRearrange={props.rearrangeEntry}\n              onCollapseExpand={props.collapseExpandEntry}\n            />\n            <Button variant=\"contained\" color=\"secondary\" onClick={onNewProjectButtonClick}>New project</Button>\n            <EntryModal key={state.edited_entry.id}\n              open={state.modal === MODAL_EDIT_NAME}\n              entry={state.edited_entry}\n              onCancel={onModalCancel}\n              onSave={onModalSave}\n              onDelete={onModalDelete}\n            />\n            <Modal\n              open={state.modal === MODAL_NEW_PROJECT_NAME}\n              onCancel={onModalCancel}\n              title='New Schedule'\n            >\n              <NewProject onOk={onNewProject} />\n            </Modal>\n          </>\n      }\n      <CssBaseline />\n    </div>\n    </ThemeProvider>\n  );\n}\n\nexport default connector(App);\n","import {\n  ADD_ENTRY, UPDATE_ENTRY, DELETE_ENTRY, REARRANGE_ENTRY, NEW_PROJECT, COLLAPSE_EXPAND_ENTRY,\n  EntryCollapseExpandAction, EntryAddAction, EntryUpdateAction, EntryDeleteAction, EntryRearrangeAction, NewProjectEntryAction,\n  EntryType, ProjectType\n} from './types';\n\nexport function collapseExpandEntryAction(entry: EntryType): EntryCollapseExpandAction {\n  return {\n    type: COLLAPSE_EXPAND_ENTRY,\n    entry: entry,\n  }\n}\n\nexport function addEntryAction(entry: EntryType): EntryAddAction {\n  return {\n    type: ADD_ENTRY,\n    entry: entry,\n  }\n}\n\nexport function updateEntryAction(entry: EntryType): EntryUpdateAction {\n  return {\n    type: UPDATE_ENTRY,\n    entry: entry,\n  }\n}\n\nexport function deleteEntryAction(entry: EntryType): EntryDeleteAction {\n  return {\n    type: DELETE_ENTRY,\n    id: entry.id,\n  }\n}\n\nexport function rearrangeEntryAction(id: number, index: number): EntryRearrangeAction {\n  return {\n    type: REARRANGE_ENTRY,\n    id: id,\n    index: index,\n  }\n}\n\nexport function newProjectAction(project_type: ProjectType): NewProjectEntryAction {\n  return {\n    type: NEW_PROJECT,\n    project_type: project_type,\n  }\n}","import { EntryListType, EntryType } from './types'\n\nconst female_first_names = [\n  'Abigail',\n  'Alexandra',\n  'Alison',\n  'Amanda',\n  'Amelia',\n  'Amy',\n  'Andrea',\n  'Angela',\n  'Anna',\n  'Anne',\n  'Audrey',\n  'Ava',\n  'Bella',\n  'Bernadette',\n  'Carol',\n  'Caroline',\n  'Carolyn',\n  'Chloe',\n  'Claire',\n  'Deirdre',\n  'Diana',\n  'Diane',\n  'Donna',\n  'Dorothy',\n  'Elizabeth',\n  'Ella',\n  'Emily',\n  'Emma',\n  'Faith',\n  'Felicity',\n  'Fiona',\n  'Gabrielle',\n  'Grace',\n  'Hannah',\n  'Heather',\n  'Irene',\n  'Jan',\n  'Jane',\n  'Jasmine',\n  'Jennifer',\n  'Jessica',\n  'Joan',\n  'Joanne',\n  'Julia',\n  'Karen',\n  'Katherine',\n  'Kimberly',\n  'Kylie',\n  'Lauren',\n  'Leah',\n  'Lillian',\n  'Lily',\n  'Lisa',\n  'Madeleine',\n  'Maria',\n  'Mary',\n  'Megan',\n  'Melanie',\n  'Michelle',\n  'Molly',\n  'Natalie',\n  'Nicola',\n  'Olivia',\n  'Penelope',\n  'Pippa',\n  'Rachel',\n  'Rebecca',\n  'Rose',\n  'Ruth',\n  'Sally',\n  'Samantha',\n  'Sarah',\n  'Sonia',\n  'Sophie',\n  'Stephanie',\n  'Sue',\n  'Theresa',\n  'Tracey',\n  'Una',\n  'Vanessa',\n  'Victoria',\n  'Virginia',\n  'Wanda',\n  'Wendy',\n  'Yvonne',\n  'Zoe'\n];\n\nconst male_first_names = [\n  'Adam',\n  'Adrian',\n  'Alan',\n  'Alexander',\n  'Andrew',\n  'Anthony',\n  'Austin',\n  'Benjamin',\n  'Blake',\n  'Boris',\n  'Brandon',\n  'Brian',\n  'Cameron',\n  'Carl',\n  'Charles',\n  'Christian',\n  'Christopher',\n  'Colin',\n  'Connor',\n  'Dan',\n  'David',\n  'Dominic',\n  'Dylan',\n  'Edward',\n  'Eric',\n  'Evan',\n  'Frank',\n  'Gavin',\n  'Gordon',\n  'Harry',\n  'Ian',\n  'Isaac',\n  'Jack',\n  'Jacob',\n  'Jake',\n  'James',\n  'Jason',\n  'Joe',\n  'John',\n  'Jonathan',\n  'Joseph',\n  'Joshua',\n  'Julian',\n  'Justin',\n  'Keith',\n  'Kevin',\n  'Leonard',\n  'Liam',\n  'Lucas',\n  'Luke',\n  'Matt',\n  'Max',\n  'Michael',\n  'Nathan',\n  'Neil',\n  'Nicholas',\n  'Oliver',\n  'Owen',\n  'Paul',\n  'Peter',\n  'Phil',\n  'Piers',\n  'Richard',\n  'Robert',\n  'Ryan',\n  'Sam',\n  'Sean',\n  'Sebastian',\n  'Simon',\n  'Stephen',\n  'Steven',\n  'Stewart',\n  'Thomas',\n  'Tim',\n  'Trevor',\n  'Victor',\n  'Warren',\n  'William'\n];\n\nconst last_names = [\n  'Abraham',\n  'Allan',\n  'Alsop',\n  'Anderson',\n  'Arnold',\n  'Avery',\n  'Bailey',\n  'Baker',\n  'Ball',\n  'Bell',\n  'Berry',\n  'Black',\n  'Blake',\n  'Bond',\n  'Bower',\n  'Brown',\n  'Buckland',\n  'Burgess',\n  'Butler',\n  'Cameron',\n  'Campbell',\n  'Carr',\n  'Chapman',\n  'Churchill',\n  'Clark',\n  'Clarkson',\n  'Coleman',\n  'Cornish',\n  'Davidson',\n  'Davies',\n  'Dickens',\n  'Dowd',\n  'Duncan',\n  'Dyer',\n  'Edmunds',\n  'Ellison',\n  'Ferguson',\n  'Fisher',\n  'Forsyth',\n  'Fraser',\n  'Gibson',\n  'Gill',\n  'Glover',\n  'Graham',\n  'Grant',\n  'Gray',\n  'Greene',\n  'Hamilton',\n  'Hardacre',\n  'Harris',\n  'Hart',\n  'Hemmings',\n  'Henderson',\n  'Hill',\n  'Hodges',\n  'Howard',\n  'Hudson',\n  'Hughes',\n  'Hunter',\n  'Ince',\n  'Jackson',\n  'James',\n  'Johnston',\n  'Jones',\n  'Kelly',\n  'Kerr',\n  'King',\n  'Knox',\n  'Lambert',\n  'Langdon',\n  'Lawrence',\n  'Lee',\n  'Lewis',\n  'Lyman',\n  'MacDonald',\n  'Mackay',\n  'Mackenzie',\n  'MacLeod',\n  'Manning',\n  'Marshall',\n  'Martin',\n  'Mathis',\n  'May',\n  'McDonald',\n  'McLean',\n  'McGrath',\n  'Metcalfe',\n  'Miller',\n  'Mills',\n  'Mitchell',\n  'Morgan',\n  'Morrison',\n  'Murray',\n  'Nash',\n  'Newman',\n  'Nolan',\n  'North',\n  'Ogden',\n  'Oliver',\n  'Paige',\n  'Parr',\n  'Parsons',\n  'Paterson',\n  'Payne',\n  'Peake',\n  'Peters',\n  'Piper',\n  'Poole',\n  'Powell',\n  'Pullman',\n  'Quinn',\n  'Rampling',\n  'Randall',\n  'Rees',\n  'Reid',\n  'Roberts',\n  'Robertson',\n  'Ross',\n  'Russell',\n  'Rutherford',\n  'Sanderson',\n  'Scott',\n  'Sharp',\n  'Short',\n  'Simpson',\n  'Skinner',\n  'Slater',\n  'Smith',\n  'Springer',\n  'Stewart',\n  'Sutherland',\n  'Taylor',\n  'Terry',\n  'Thomson',\n  'Tucker',\n  'Turner',\n  'Underwood',\n  'Vance',\n  'Vaughan',\n  'Walker',\n  'Wallace',\n  'Walsh',\n  'Watson',\n  'Welch',\n  'White',\n  'Wilkins',\n  'Wilson',\n  'Wright',\n  'Young'\n];\n\nfunction getRandomLastName(): string {\n  return last_names[Math.floor(Math.random() * last_names.length)];\n}\n\nfunction getMaleName(): string {\n  return male_first_names[Math.floor(Math.random() * male_first_names.length)] + ' ' + getRandomLastName();\n}\n\nfunction getFemaleName(): string {\n  return female_first_names[Math.floor(Math.random() * male_first_names.length)] + ' ' + getRandomLastName();\n}\n\nfunction getRandomScheduleEntry(id: number, title: string, min_participant: number, max_participant: number): EntryType {\n  let entry: EntryType = {\n    id: id,\n    title: title,\n    participants: [],\n    expanded: true,\n  };\n  for (let j = 0; j < Math.floor(Math.random() * (max_participant - min_participant + 1)) + min_participant; j++) {\n    entry.participants.push(j % 2 === 0 ? getFemaleName() : getMaleName());\n  }\n  return entry;\n}\n\nexport default function generate(entries_count: number, min_participant: number, max_participant: number): EntryListType {\n  return ((): EntryListType => {\n    let schedule: EntryListType = {\n      title: '',\n      entries: [],\n    };\n    for (let i = 0; i < entries_count; i++) {\n      schedule.entries.push(getRandomScheduleEntry(i + 1, 'Dance ' + (i + 1).toString(), min_participant, max_participant));\n    }\n    return schedule;\n  })();\n}","import {\n  EntryListType,\n  EntriesActionTypes,\n  EntryType,\n  ADD_ENTRY,\n  UPDATE_ENTRY,\n  DELETE_ENTRY,\n  REARRANGE_ENTRY,\n  ProjectType,\n  DEMO_PROJECT_TYPE,\n  EMPTY_PROJECT_TYPE,\n  NEW_PROJECT,\n  COLLAPSE_EXPAND_ENTRY,\n} from '../types';\n\nimport data_generator from '../demo';\n\nconst initialState: EntryListType = {\n  title: '',\n  entries: [],\n}\n\nlet project_counter: number = 1;\n\nfunction newProject(project_type: ProjectType, project_counter: number): EntryListType {\n  switch (project_type) {\n    case DEMO_PROJECT_TYPE:\n      return { ...data_generator(5, 2, 6), title: 'Demo schedule ' + project_counter.toString() };\n    case EMPTY_PROJECT_TYPE:\n    default:\n      return {\n        title: 'New schedule ' + project_counter.toString(),\n        entries: [],\n      };\n  }\n}\n\nexport function entries(state = initialState, action: EntriesActionTypes) {\n  switch (action.type) {\n    case COLLAPSE_EXPAND_ENTRY:\n      state.entries = state.entries.map((value) => {\n        if (value.id === action.entry.id) {\n          value.expanded = !value.expanded\n        }\n        return value\n      });\n      return {...state};\n    case NEW_PROJECT:\n      return newProject(action.project_type, project_counter++);\n    case ADD_ENTRY:\n      let id = 0;\n      state.entries.forEach((entry) => {\n        if (entry.id > id) {\n          id = entry.id\n        }\n      })\n      action.entry.id = id + 1\n      console.log(action.entry.id);\n      return {\n        entries: [...state.entries, action.entry]\n      }\n    case UPDATE_ENTRY:\n      let newState = { ...state };\n      for (let i = 0; i < newState.entries.length; i++) {\n        if (newState.entries[i].id === action.entry.id) {\n          newState.entries[i] = { ...action.entry }\n        }\n      }\n      return newState;\n    case DELETE_ENTRY:\n      state.entries = state.entries.filter((value) => value.id !== action.id);\n      return { ...state };\n    case REARRANGE_ENTRY:\n      let currentIndex = -1;\n      let currentEntry: EntryType;\n      for (let i = 0; i < state.entries.length; i++) {\n        if (state.entries[i].id === action.id) {\n          currentIndex = i;\n          break;\n        }\n      }\n      if (currentIndex === -1) {\n        return state;\n      }\n\n      [currentEntry] = state.entries.splice(currentIndex, 1);\n      state.entries.splice(action.index, 0, currentEntry);\n      return { ...state };\n    default:\n      return state\n  }\n}","import { combineReducers } from 'redux'\nimport { entries } from './entries'\n\nexport default combineReducers({\n  schedule: entries,\n})","import { createStore, applyMiddleware } from 'redux'\nimport rootReducer from './reducers'\nimport { loadState, LocalStorageMiddleware } from './localstorage'\n\nconst localStorageKey = 'easy-schedule';\n\nconst initialState = Object.assign({}, loadState(localStorageKey))\n\nconst middleWare = applyMiddleware(LocalStorageMiddleware(localStorageKey));\n\nconst store = createStore(rootReducer, initialState, middleWare);\n\nexport default store;","import { Middleware } from 'redux'\n\nexport const loadState = (key: string) => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const saveState = (key: string, state: object) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(key, serializedState);\n  } catch {\n    // ignore write errors\n  }\n};\n\nexport function LocalStorageMiddleware(key: string): Middleware {\n  return store => next => action => {\n    next(action);\n    saveState(key, store.getState());\n  }\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport './index.css'\nimport App from './App'\nimport store from './store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"project_type_card\":\"styles_project_type_card__usLlG\",\"schedule_media\":\"styles_schedule_media__1CzQm\"};"],"sourceRoot":""}