{"version":3,"sources":["components/Entry.tsx","components/EntryList.tsx","components/EntryModal.tsx","store/types.ts","components/NewProject/images/empty_schedule.svg","components/NewProject/images/demo_schedule.svg","components/NewProject/index.tsx","components/Modal.tsx","App.tsx","store/actions.ts","store/demo.ts","store/reducers/entries.ts","store/reducers/index.ts","store/index.ts","store/localstorage.ts","index.tsx","components/NewProject/styles.module.css"],"names":["Entry","props","bad_participants","style","length","forEach","item","backgroundColor","draggableId","entry_id","toString","index","provided","Card","className","onClick","draggableProps","dragHandleProps","ref","innerRef","CardContent","title","participants","map","participant","color","Chip","label","EntryList","entries","prevEntry","undefined","result","entry","push","indexOf","BadParticipantsForEntries","onDragEnd","destination","source","onRearrange","droppableId","droppableProps","id","onSelect","placeholder","EntryModal","initialState","Object","assign","useState","state","setState","theme","useTheme","fullScreen","useMediaQuery","breakpoints","down","Dialog","open","onClose","onCancel","DialogTitle","DialogContent","TextField","margin","type","fullWidth","value","onChange","event","target","variant","defaultValue","values","DialogActions","Button","onDelete","onSave","ADD_ENTRY","UPDATE_ENTRY","DELETE_ENTRY","REARRANGE_ENTRY","NEW_PROJECT","EMPTY_PROJECT_TYPE","DEMO_PROJECT_TYPE","MODAL_NEW_PROJECT_NAME","MODAL_EDIT_NAME","NewProject","onSaveClick","project_type","onOk","Container","Grid","container","justifyContent","spacing","styles","project_type_card","CardActionArea","CardMedia","component","schedule_media","image","empty_schedule_svg","CardHeader","demo_schedule_svg","Modal","children","mapDispatch","addEntry","updateEntry","deleteEntry","rearrangeEntry","newProject","connector","connect","schedule","modal","edited_entry","onModalCancel","onNewProject","useEffect","i","CssBaseline","female_first_names","male_first_names","last_names","getRandomLastName","Math","floor","random","getRandomScheduleEntry","min_participant","max_participant","j","project_counter","entries_count","combineReducers","action","newState","filter","currentEntry","currentIndex","splice","key","localStorageKey","serializedState","localStorage","getItem","JSON","parse","err","loadState","middleWare","applyMiddleware","store","next","stringify","setItem","saveState","getState","createStore","rootReducer","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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F,QAqEtCpF,YAAavC,EAAMiH,iBAErB,cAACrC,EAAA,EAAD,CAAQJ,QAAQ,YAAYhD,MAAM,YAAYV,QA/BxD,WACEqC,EAAS,2BACJD,GADG,IAENoE,MAAOhC,MA4BD,yBACA,cAACzC,EAAD,CACEc,KAAMT,EAAMoE,QAAU/B,EACtBvD,MAAOkB,EAAMqE,aACb1D,SAAU2D,EACV1C,OAlEZ,SAAqB9C,GACfA,EAAMZ,MAAMjB,OAAS,IACvBgD,EAAS,2BACJD,GADG,IAENoE,ML7DuB,MK+DR,IAAbtF,EAAMU,GACR1C,EAAM8G,SAAS9E,GAEfhC,EAAM+G,YAAY/E,KA0DZ6C,SArDZ,SAAuB7C,GACrBmB,EAAS,2BACJD,GADG,IAENoE,ML1EyB,MK4E3BtH,EAAMgH,YAAYhF,KA2COkB,EAAMqE,aAAa7E,IAOpC,cAAC,EAAD,CACEiB,KAAMT,EAAMoE,QAAUhC,EACtBzB,SAAU2D,EACVpG,MAAM,eAHR,SAKE,cAACoE,EAAD,CAAYG,KAAM8B,SAI1B,cAACG,EAAA,EAAD,U,gBE/IAC,EAAqB,CACzB,UACA,YACA,SACA,SACA,SACA,MACA,SACA,SACA,OACA,OACA,SACA,MACA,QACA,aACA,QACA,WACA,UACA,QACA,SACA,UACA,QACA,QACA,QACA,UACA,YACA,OACA,QACA,OACA,QACA,WACA,QACA,YACA,QACA,SACA,UACA,QACA,MACA,OACA,UACA,WACA,UACA,OACA,SACA,QACA,QACA,YACA,WACA,QACA,SACA,OACA,UACA,OACA,OACA,YACA,QACA,OACA,QACA,UACA,WACA,QACA,UACA,SACA,SACA,WACA,QACA,SACA,UACA,OACA,OACA,QACA,WACA,QACA,QACA,SACA,YACA,MACA,UACA,SACA,MACA,UACA,WACA,WACA,QACA,QACA,SACA,OAGIC,GAAmB,CACvB,OACA,SACA,OACA,YACA,SACA,UACA,SACA,WACA,QACA,QACA,UACA,QACA,UACA,OACA,UACA,YACA,cACA,QACA,SACA,MACA,QACA,UACA,QACA,SACA,OACA,OACA,QACA,QACA,SACA,QACA,MACA,QACA,OACA,QACA,OACA,QACA,QACA,MACA,OACA,WACA,SACA,SACA,SACA,SACA,QACA,QACA,UACA,OACA,QACA,OACA,OACA,MACA,UACA,SACA,OACA,WACA,SACA,OACA,OACA,QACA,OACA,QACA,UACA,SACA,OACA,MACA,OACA,YACA,QACA,UACA,SACA,UACA,SACA,MACA,SACA,SACA,SACA,WAGIC,GAAa,CACjB,UACA,QACA,QACA,WACA,SACA,QACA,SACA,QACA,OACA,OACA,QACA,QACA,QACA,OACA,QACA,QACA,WACA,UACA,SACA,UACA,WACA,OACA,UACA,YACA,QACA,WACA,UACA,UACA,WACA,SACA,UACA,OACA,SACA,OACA,UACA,UACA,WACA,SACA,UACA,SACA,SACA,OACA,SACA,SACA,QACA,OACA,SACA,WACA,WACA,SACA,OACA,WACA,YACA,OACA,SACA,SACA,SACA,SACA,SACA,OACA,UACA,QACA,WACA,QACA,QACA,OACA,OACA,OACA,UACA,UACA,WACA,MACA,QACA,QACA,YACA,SACA,YACA,UACA,UACA,WACA,SACA,SACA,MACA,WACA,SACA,UACA,WACA,SACA,QACA,WACA,SACA,WACA,SACA,OACA,SACA,QACA,QACA,QACA,SACA,QACA,OACA,UACA,WACA,QACA,QACA,SACA,QACA,QACA,SACA,UACA,QACA,WACA,UACA,OACA,OACA,UACA,YACA,OACA,UACA,aACA,YACA,QACA,QACA,QACA,UACA,UACA,SACA,QACA,WACA,UACA,aACA,SACA,QACA,UACA,SACA,SACA,YACA,QACA,UACA,SACA,UACA,QACA,SACA,QACA,QACA,UACA,SACA,SACA,SAGF,SAASC,KACP,OAAOD,GAAWE,KAAKC,MAAMD,KAAKE,SAAWJ,GAAW5H,SAW1D,SAASiI,GAAuB1F,EAAYtB,EAAeiH,EAAyBC,GAMlF,IALA,IAAItG,EAAmB,CACrBU,GAAIA,EACJtB,MAAOA,EACPC,aAAc,IAEPkH,EAAI,EAAGA,EAAIN,KAAKC,MAAMD,KAAKE,UA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","file":"static/js/main.fdf1662e.chunk.js","sourcesContent":["import React from 'react';\nimport './Entry.css';\nimport { Draggable } from 'react-beautiful-dnd'\nimport Chip from '@material-ui/core/Chip'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\n\ninterface IProps {\n  entry_id: number,\n  index: number,\n  title: string,\n  participants?: string[],\n  bad_participants?: string[],\n  onClick?: () => void,\n}\n\nexport default function Entry(props: IProps) {\n  let bad_participants: { [id: string]: boolean } = {};\n  let style = {};\n  if (props.bad_participants && props.bad_participants.length) {\n    props.bad_participants.forEach((item: string) => { bad_participants[item] = true })\n    style = { backgroundColor: \"#fdd\" };\n  }\n  return (\n    <Draggable draggableId={props.entry_id.toString()} index={props.index}>\n      {(provided) => (\n        <Card className=\"Entry\" onClick={props.onClick} {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\n          <CardContent style={style}>\n            <div className=\"Entry-title\">{props.title}</div>\n            <div className=\"Entry-participant-list\">\n              {\n                props.participants && props.participants.map(participant => {\n                  const color = bad_participants[participant] ? \"secondary\" : \"primary\";\n                  return <Chip label={participant} color={color} key={participant} />;\n                })\n              }\n            </div>\n          </CardContent>\n        </Card>\n      )}\n    </Draggable>\n  )\n}","import React from 'react';\nimport './EntryList.css';\nimport Entry from './Entry'\nimport { EntryType } from '../store/types'\nimport { DragDropContext, DropResult, Droppable } from 'react-beautiful-dnd'\n\ninterface IProps {\n  entries: EntryType[],\n  onSelect?: (id: number) => void,\n  onRearrange?: (id: number, index: number) => void\n}\n\nfunction BadParticipantsForEntries(entries: EntryType[]): string[][] {\n  let prevEntry: EntryType | undefined = undefined;\n  let result: string[][] = [];\n  entries.forEach((entry: EntryType) => {\n    result.push([]);\n    if (prevEntry) {\n      entry.participants.forEach((participant) => {\n        if (prevEntry && prevEntry.participants.indexOf(participant) !== -1) {\n          result[result.length - 1].push(participant);\n          result[result.length - 2].push(participant);\n        }\n      })\n    }\n    prevEntry = entry;\n  });\n  return result;\n}\n\nexport default function EntryList(props: IProps) {\n  function onDragEnd(result: DropResult) {\n    const { destination, source, draggableId } = result;\n    if (!destination || !props.onRearrange) {\n      return;\n    }\n\n    if (destination.index === source.index) {\n      return;\n    }\n\n    props.onRearrange(+draggableId, destination.index)\n  }\n\n  const bad_participants = BadParticipantsForEntries(props.entries);\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Droppable droppableId=\"1\">\n        {provided => (\n          <div\n            className=\"EntryList\"\n            ref={provided.innerRef}\n            {...provided.droppableProps}\n          >\n            {\n              props.entries && props.entries.map((entry, index) => {\n                return <Entry\n                  entry_id={entry.id}\n                  index={index}\n                  title={entry.title}\n                  key={\"entry_\" + entry.title}\n                  participants={entry.participants}\n                  bad_participants={bad_participants[index]}\n                  onClick={() => props.onSelect && props.onSelect(entry.id)}\n                />;\n              })\n            }\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    </DragDropContext>\n  )\n}","import React, { useState, ChangeEvent } from 'react';\nimport { EntryType } from '../store/types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport TextField from '@material-ui/core/TextField';\nimport ChipInput from 'material-ui-chip-input';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\n\ntype EntryModalProps = {\n  open: boolean,\n  entry?: EntryType,\n  onCancel?: () => void,\n  onSave?: (entry: EntryType) => void,\n  onDelete?: (entry: EntryType) => void,\n}\n\nexport default function EntryModal(props: EntryModalProps) {\n  const initialState = props.entry ? Object.assign({}, props.entry) : { id: 0, title: '', participants: [] };\n  const [state, setState] = useState(initialState);\n\n  function onTitleChangeHandler(event: ChangeEvent<HTMLInputElement>) {\n    setState({ ...state, title: event.target.value });\n  }\n\n  function onParticipantsChange(values: string[]) {\n    setState({ ...state, participants: values });\n  }\n\n  function onSaveClick() {\n    props.onSave && props.onSave(state);\n  }\n\n  function onDeleteClick() {\n    props.onDelete && props.onDelete(state);\n  }\n\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  return (\n    <Dialog\n      open={props.open}\n      fullScreen={fullScreen}\n      onClose={props.onCancel}\n    >\n      <DialogTitle>\n        {\n          state.id === 0 ? 'Добавить элемент' : 'Редактировать элемент'\n        }\n      </DialogTitle>\n      <DialogContent>\n        <TextField\n          margin=\"dense\"\n          label=\"Название:\"\n          type=\"text\"\n          fullWidth\n          value={state.title}\n          onChange={onTitleChangeHandler}\n        />\n        <ChipInput\n          label=\"Участники:\"\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          defaultValue={state.participants}\n          onChange={onParticipantsChange}\n        />\n      </DialogContent>\n      <DialogActions>\n        {\n          state.id !== 0 &&\n          <Button onClick={onDeleteClick} color=\"secondary\">\n            Delete\n          </Button>\n        }\n        <Button onClick={props.onCancel}>\n          Close\n        </Button>\n        <Button onClick={onSaveClick}>\n          Save\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}","export const ADD_ENTRY = 'ADD_ENTRY';\nexport const UPDATE_ENTRY = 'UPDATE_ENTRY';\nexport const DELETE_ENTRY = 'DELETE_ENTRY';\nexport const REARRANGE_ENTRY = 'REARRANGE_ENTRY';\nexport const NEW_PROJECT = 'NEW_PROJECT';\n\nexport const EMPTY_PROJECT_TYPE = 'EMPTY_PROJECT';\nexport const DEMO_PROJECT_TYPE = 'DEMO_PROJECT';\nexport type ProjectType = typeof EMPTY_PROJECT_TYPE | typeof DEMO_PROJECT_TYPE;\n\nexport const MODAL_VOID_NAME = '';\nexport const MODAL_NEW_PROJECT_NAME = 'NewProject';\nexport const MODAL_EDIT_NAME = 'Edit';\nexport type ModalType = typeof MODAL_NEW_PROJECT_NAME | typeof MODAL_EDIT_NAME | typeof MODAL_VOID_NAME;\n\nexport interface EntryAddAction {\n  type: typeof ADD_ENTRY\n  entry: EntryType\n}\n\nexport interface EntryUpdateAction {\n  type: typeof UPDATE_ENTRY\n  entry: EntryType\n}\n\nexport interface EntryDeleteAction {\n  type: typeof DELETE_ENTRY\n  id: number\n}\n\nexport interface EntryRearrangeAction {\n  type: typeof REARRANGE_ENTRY\n  id: number\n  index: number\n}\n\nexport interface NewProjectEntryAction {\n  type: typeof NEW_PROJECT,\n  project_type: ProjectType,\n}\n\nexport type EntriesActionTypes = EntryAddAction | EntryUpdateAction | EntryDeleteAction | EntryRearrangeAction | NewProjectEntryAction;\n\nexport interface EntryType {\n  id: number\n  title: string\n  participants: string[]\n}\n\nexport interface EntryListType {\n  title: string,\n  entries: EntryType[],\n}\n\nexport interface RootState {\n  schedule: EntryListType\n}","export default __webpack_public_path__ + \"static/media/empty_schedule.b845eebc.svg\";","export default __webpack_public_path__ + \"static/media/demo_schedule.25022235.svg\";","import React from 'react';\nimport { ProjectType, DEMO_PROJECT_TYPE, EMPTY_PROJECT_TYPE } from '../../store/types';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport empty_schedule_svg from './images/empty_schedule.svg'\nimport demo_schedule_svg from './images/demo_schedule.svg'\nimport styles from \"./styles.module.css\";\n\ninterface ModalProps {\n  onOk?: (project_type: ProjectType) => void,\n}\n\nexport default function NewProject(props: ModalProps) {\n\n  function onSaveClick(project_type: ProjectType) {\n    props.onOk && props.onOk(project_type);\n  }\n\n  return (\n    <Container>\n      <h1>Create a new schedule project</h1>\n    <Grid container justifyContent=\"center\" spacing={10}>\n      <Grid item>\n        <Card className={styles.project_type_card} onClick={() => { onSaveClick(EMPTY_PROJECT_TYPE) }}>\n          <CardActionArea>\n            <CardMedia\n              component=\"img\"\n              className={styles.schedule_media}\n              image={empty_schedule_svg}\n              title=\"Empty schedule image\"\n            />\n            <CardHeader title=\"Blank\" />\n            <CardContent>\n              Create blank schedule.\n              </CardContent>\n          </CardActionArea>\n        </Card>\n      </Grid>\n      <Grid item>\n        <Card className={styles.project_type_card} onClick={() => onSaveClick(DEMO_PROJECT_TYPE)}>\n          <CardActionArea>\n            <CardMedia\n              className={styles.schedule_media}\n              image={demo_schedule_svg}\n              title=\"Demo schedule image\"\n            />\n            <CardHeader title=\"Demo\" />\n            <CardContent>\n              Create demo schedule with random data.\n              </CardContent>\n          </CardActionArea>\n        </Card>\n      </Grid>\n    </Grid>\n    </Container>\n  );\n}","import React, { FunctionComponent } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\n\ninterface ModalProps {\n  open: boolean,\n  title: string,\n  onCancel?: () => void,\n}\n\nexport const Modal: FunctionComponent<ModalProps> = (props) => {\n\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  return (\n    <Dialog\n      open={props.open}\n      fullScreen={fullScreen}\n      onClose={props.onCancel}\n    >\n      <DialogTitle>\n        {props.title}\n      </DialogTitle>\n      <DialogContent>\n        {props.children}\n      </DialogContent>\n    </Dialog>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport EntryList from './components/EntryList';\nimport EntryModal from './components/EntryModal';\nimport NewProject from './components/NewProject';\nimport { Modal } from './components/Modal';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { RootState, EntryType, ProjectType, MODAL_EDIT_NAME, MODAL_NEW_PROJECT_NAME, MODAL_VOID_NAME } from './store/types'\nimport { addEntryAction, updateEntryAction, deleteEntryAction, rearrangeEntryAction, newProjectAction } from './store/actions'\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nconst mapState = (state: RootState) => ({\n  schedule: state.schedule,\n});\n\nconst mapDispatch = {\n  addEntry: addEntryAction,\n  updateEntry: updateEntryAction,\n  deleteEntry: deleteEntryAction,\n  rearrangeEntry: rearrangeEntryAction,\n  newProject: newProjectAction,\n}\n\nconst connector = connect(mapState, mapDispatch)\n\ntype Props = ConnectedProps<typeof connector>\n\nfunction getEmptyEntry(): EntryType {\n  return {\n    id: 0,\n    title: '',\n    participants: [],\n  }\n}\n\nfunction App(props: Props) {\n  const [state, setState] = useState({\n    modal: MODAL_VOID_NAME,\n    schedule: { ...props.schedule },\n    edited_entry: getEmptyEntry(),\n  });\n\n  useEffect(() => {\n    setState({\n      ...state,\n      schedule: { ...props.schedule },\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props])\n\n  function onEntrySelect(id: number) {\n    for (let i = 0; i < state.schedule.entries.length; i++) {\n      if (state.schedule.entries[i].id === id) {\n        setState({\n          ...state,\n          modal: MODAL_EDIT_NAME,\n          edited_entry: { ...state.schedule.entries[i] },\n        })\n      }\n    }\n  }\n\n  function onModalCancel() {\n    setState({ ...state, modal: MODAL_VOID_NAME });\n  }\n\n  function onModalSave(entry: EntryType) {\n    if (entry.title.length > 0) {\n      setState({\n        ...state,\n        modal: MODAL_VOID_NAME,\n      });\n      if (entry.id === 0) {\n        props.addEntry(entry);\n      } else {\n        props.updateEntry(entry);\n      }\n    }\n  }\n\n  function onModalDelete(entry: EntryType) {\n    setState({\n      ...state,\n      modal: MODAL_VOID_NAME\n    });\n    props.deleteEntry(entry);\n  }\n\n  function onAddButtonClick() {\n    setState({\n      ...state,\n      modal: MODAL_EDIT_NAME,\n      edited_entry: getEmptyEntry(),\n    });\n  }\n\n  function onNewProjectButtonClick() {\n    setState({\n      ...state,\n      modal: MODAL_NEW_PROJECT_NAME,\n    });\n  }\n\n  function onNewProject(project_type: ProjectType) {\n    setState({\n      ...state,\n      modal: MODAL_VOID_NAME\n    });\n    props.newProject(project_type);\n  }\n\n  return (\n    <div className=\"App\">\n      {\n        state.schedule.title === \"\" ?\n          <NewProject onOk={onNewProject} />\n          :\n          <>\n            <header className=\"App-header\">\n              <h1>{state.schedule.title}</h1>\n            </header>\n            <Button variant=\"contained\" color=\"primary\" onClick={onAddButtonClick}>Add entry</Button>\n            <EntryList\n              entries={state.schedule.entries}\n              onSelect={onEntrySelect}\n              onRearrange={props.rearrangeEntry}\n            />\n            <Button variant=\"contained\" color=\"secondary\" onClick={onNewProjectButtonClick}>New project</Button>\n            <EntryModal key={state.edited_entry.id}\n              open={state.modal === MODAL_EDIT_NAME}\n              entry={state.edited_entry}\n              onCancel={onModalCancel}\n              onSave={onModalSave}\n              onDelete={onModalDelete}\n            />\n            <Modal\n              open={state.modal === MODAL_NEW_PROJECT_NAME}\n              onCancel={onModalCancel}\n              title='New Schedule'\n            >\n              <NewProject onOk={onNewProject} />\n            </Modal>\n          </>\n      }\n      <CssBaseline />\n    </div>\n  );\n}\n\nexport default connector(App);\n","import {\n  ADD_ENTRY, UPDATE_ENTRY, DELETE_ENTRY, REARRANGE_ENTRY, NEW_PROJECT,\n  EntryAddAction, EntryUpdateAction, EntryDeleteAction, EntryRearrangeAction, NewProjectEntryAction,\n  EntryType, ProjectType\n} from './types';\n\nexport function addEntryAction(entry: EntryType): EntryAddAction {\n  return {\n    type: ADD_ENTRY,\n    entry: entry,\n  }\n}\n\nexport function updateEntryAction(entry: EntryType): EntryUpdateAction {\n  return {\n    type: UPDATE_ENTRY,\n    entry: entry,\n  }\n}\n\nexport function deleteEntryAction(entry: EntryType): EntryDeleteAction {\n  return {\n    type: DELETE_ENTRY,\n    id: entry.id,\n  }\n}\n\nexport function rearrangeEntryAction(id: number, index: number): EntryRearrangeAction {\n  return {\n    type: REARRANGE_ENTRY,\n    id: id,\n    index: index,\n  }\n}\n\nexport function newProjectAction(project_type: ProjectType): NewProjectEntryAction {\n  return {\n    type: NEW_PROJECT,\n    project_type: project_type,\n  }\n}","import { EntryListType, EntryType } from './types'\n\nconst female_first_names = [\n  'Abigail',\n  'Alexandra',\n  'Alison',\n  'Amanda',\n  'Amelia',\n  'Amy',\n  'Andrea',\n  'Angela',\n  'Anna',\n  'Anne',\n  'Audrey',\n  'Ava',\n  'Bella',\n  'Bernadette',\n  'Carol',\n  'Caroline',\n  'Carolyn',\n  'Chloe',\n  'Claire',\n  'Deirdre',\n  'Diana',\n  'Diane',\n  'Donna',\n  'Dorothy',\n  'Elizabeth',\n  'Ella',\n  'Emily',\n  'Emma',\n  'Faith',\n  'Felicity',\n  'Fiona',\n  'Gabrielle',\n  'Grace',\n  'Hannah',\n  'Heather',\n  'Irene',\n  'Jan',\n  'Jane',\n  'Jasmine',\n  'Jennifer',\n  'Jessica',\n  'Joan',\n  'Joanne',\n  'Julia',\n  'Karen',\n  'Katherine',\n  'Kimberly',\n  'Kylie',\n  'Lauren',\n  'Leah',\n  'Lillian',\n  'Lily',\n  'Lisa',\n  'Madeleine',\n  'Maria',\n  'Mary',\n  'Megan',\n  'Melanie',\n  'Michelle',\n  'Molly',\n  'Natalie',\n  'Nicola',\n  'Olivia',\n  'Penelope',\n  'Pippa',\n  'Rachel',\n  'Rebecca',\n  'Rose',\n  'Ruth',\n  'Sally',\n  'Samantha',\n  'Sarah',\n  'Sonia',\n  'Sophie',\n  'Stephanie',\n  'Sue',\n  'Theresa',\n  'Tracey',\n  'Una',\n  'Vanessa',\n  'Victoria',\n  'Virginia',\n  'Wanda',\n  'Wendy',\n  'Yvonne',\n  'Zoe'\n];\n\nconst male_first_names = [\n  'Adam',\n  'Adrian',\n  'Alan',\n  'Alexander',\n  'Andrew',\n  'Anthony',\n  'Austin',\n  'Benjamin',\n  'Blake',\n  'Boris',\n  'Brandon',\n  'Brian',\n  'Cameron',\n  'Carl',\n  'Charles',\n  'Christian',\n  'Christopher',\n  'Colin',\n  'Connor',\n  'Dan',\n  'David',\n  'Dominic',\n  'Dylan',\n  'Edward',\n  'Eric',\n  'Evan',\n  'Frank',\n  'Gavin',\n  'Gordon',\n  'Harry',\n  'Ian',\n  'Isaac',\n  'Jack',\n  'Jacob',\n  'Jake',\n  'James',\n  'Jason',\n  'Joe',\n  'John',\n  'Jonathan',\n  'Joseph',\n  'Joshua',\n  'Julian',\n  'Justin',\n  'Keith',\n  'Kevin',\n  'Leonard',\n  'Liam',\n  'Lucas',\n  'Luke',\n  'Matt',\n  'Max',\n  'Michael',\n  'Nathan',\n  'Neil',\n  'Nicholas',\n  'Oliver',\n  'Owen',\n  'Paul',\n  'Peter',\n  'Phil',\n  'Piers',\n  'Richard',\n  'Robert',\n  'Ryan',\n  'Sam',\n  'Sean',\n  'Sebastian',\n  'Simon',\n  'Stephen',\n  'Steven',\n  'Stewart',\n  'Thomas',\n  'Tim',\n  'Trevor',\n  'Victor',\n  'Warren',\n  'William'\n];\n\nconst last_names = [\n  'Abraham',\n  'Allan',\n  'Alsop',\n  'Anderson',\n  'Arnold',\n  'Avery',\n  'Bailey',\n  'Baker',\n  'Ball',\n  'Bell',\n  'Berry',\n  'Black',\n  'Blake',\n  'Bond',\n  'Bower',\n  'Brown',\n  'Buckland',\n  'Burgess',\n  'Butler',\n  'Cameron',\n  'Campbell',\n  'Carr',\n  'Chapman',\n  'Churchill',\n  'Clark',\n  'Clarkson',\n  'Coleman',\n  'Cornish',\n  'Davidson',\n  'Davies',\n  'Dickens',\n  'Dowd',\n  'Duncan',\n  'Dyer',\n  'Edmunds',\n  'Ellison',\n  'Ferguson',\n  'Fisher',\n  'Forsyth',\n  'Fraser',\n  'Gibson',\n  'Gill',\n  'Glover',\n  'Graham',\n  'Grant',\n  'Gray',\n  'Greene',\n  'Hamilton',\n  'Hardacre',\n  'Harris',\n  'Hart',\n  'Hemmings',\n  'Henderson',\n  'Hill',\n  'Hodges',\n  'Howard',\n  'Hudson',\n  'Hughes',\n  'Hunter',\n  'Ince',\n  'Jackson',\n  'James',\n  'Johnston',\n  'Jones',\n  'Kelly',\n  'Kerr',\n  'King',\n  'Knox',\n  'Lambert',\n  'Langdon',\n  'Lawrence',\n  'Lee',\n  'Lewis',\n  'Lyman',\n  'MacDonald',\n  'Mackay',\n  'Mackenzie',\n  'MacLeod',\n  'Manning',\n  'Marshall',\n  'Martin',\n  'Mathis',\n  'May',\n  'McDonald',\n  'McLean',\n  'McGrath',\n  'Metcalfe',\n  'Miller',\n  'Mills',\n  'Mitchell',\n  'Morgan',\n  'Morrison',\n  'Murray',\n  'Nash',\n  'Newman',\n  'Nolan',\n  'North',\n  'Ogden',\n  'Oliver',\n  'Paige',\n  'Parr',\n  'Parsons',\n  'Paterson',\n  'Payne',\n  'Peake',\n  'Peters',\n  'Piper',\n  'Poole',\n  'Powell',\n  'Pullman',\n  'Quinn',\n  'Rampling',\n  'Randall',\n  'Rees',\n  'Reid',\n  'Roberts',\n  'Robertson',\n  'Ross',\n  'Russell',\n  'Rutherford',\n  'Sanderson',\n  'Scott',\n  'Sharp',\n  'Short',\n  'Simpson',\n  'Skinner',\n  'Slater',\n  'Smith',\n  'Springer',\n  'Stewart',\n  'Sutherland',\n  'Taylor',\n  'Terry',\n  'Thomson',\n  'Tucker',\n  'Turner',\n  'Underwood',\n  'Vance',\n  'Vaughan',\n  'Walker',\n  'Wallace',\n  'Walsh',\n  'Watson',\n  'Welch',\n  'White',\n  'Wilkins',\n  'Wilson',\n  'Wright',\n  'Young'\n];\n\nfunction getRandomLastName(): string {\n  return last_names[Math.floor(Math.random() * last_names.length)];\n}\n\nfunction getMaleName(): string {\n  return male_first_names[Math.floor(Math.random() * male_first_names.length)] + ' ' + getRandomLastName();\n}\n\nfunction getFemaleName(): string {\n  return female_first_names[Math.floor(Math.random() * male_first_names.length)] + ' ' + getRandomLastName();\n}\n\nfunction getRandomScheduleEntry(id: number, title: string, min_participant: number, max_participant: number): EntryType {\n  let entry: EntryType = {\n    id: id,\n    title: title,\n    participants: [],\n  };\n  for (let j = 0; j < Math.floor(Math.random() * (max_participant - min_participant + 1)) + min_participant; j++) {\n    entry.participants.push(j % 2 === 0 ? getFemaleName() : getMaleName());\n  }\n  return entry;\n}\n\nexport default function generate(entries_count: number, min_participant: number, max_participant: number): EntryListType {\n  return ((): EntryListType => {\n    let schedule: EntryListType = {\n      title: '',\n      entries: [],\n    };\n    for (let i = 0; i < entries_count; i++) {\n      schedule.entries.push(getRandomScheduleEntry(i + 1, 'Dance ' + (i + 1).toString(), min_participant, max_participant));\n    }\n    return schedule;\n  })();\n}","import {\n  EntryListType,\n  EntriesActionTypes,\n  EntryType,\n  ADD_ENTRY,\n  UPDATE_ENTRY,\n  DELETE_ENTRY,\n  REARRANGE_ENTRY,\n  ProjectType,\n  DEMO_PROJECT_TYPE,\n  EMPTY_PROJECT_TYPE,\n  NEW_PROJECT,\n} from '../types';\n\nimport data_generator from '../demo';\n\nconst initialState: EntryListType = {\n  title: '',\n  entries: [],\n}\n\nlet project_counter: number = 1;\n\nfunction newProject(project_type: ProjectType, project_counter: number): EntryListType {\n  switch (project_type) {\n    case DEMO_PROJECT_TYPE:\n      return { ...data_generator(5, 2, 6), title: 'Demo schedule ' + project_counter.toString() };\n    case EMPTY_PROJECT_TYPE:\n    default:\n      return {\n        title: 'New schedule ' + project_counter.toString(),\n        entries: [],\n      };\n  }\n}\n\nexport function entries(state = initialState, action: EntriesActionTypes) {\n  switch (action.type) {\n    case NEW_PROJECT:\n      return newProject(action.project_type, project_counter++);\n    case ADD_ENTRY:\n      return {\n        entries: [...state.entries, action.entry]\n      }\n    case UPDATE_ENTRY:\n      let newState = { ...state };\n      for (let i = 0; i < newState.entries.length; i++) {\n        if (newState.entries[i].id === action.entry.id) {\n          newState.entries[i] = { ...action.entry }\n        }\n      }\n      return newState;\n    case DELETE_ENTRY:\n      state.entries = state.entries.filter((value) => value.id !== action.id);\n      return { ...state };\n    case REARRANGE_ENTRY:\n      let currentIndex = -1;\n      let currentEntry: EntryType;\n      for (let i = 0; i < state.entries.length; i++) {\n        if (state.entries[i].id === action.id) {\n          currentIndex = i;\n          break;\n        }\n      }\n      if (currentIndex === -1) {\n        return state;\n      }\n\n      [currentEntry] = state.entries.splice(currentIndex, 1);\n      state.entries.splice(action.index, 0, currentEntry);\n      return { ...state };\n    default:\n      return state\n  }\n}","import { combineReducers } from 'redux'\nimport { entries } from './entries'\n\nexport default combineReducers({\n  schedule: entries,\n})","import { createStore, applyMiddleware } from 'redux'\nimport rootReducer from './reducers'\nimport { loadState, LocalStorageMiddleware } from './localstorage'\n\nconst localStorageKey = 'easy-schedule';\n\nconst initialState = Object.assign({}, loadState(localStorageKey))\n\nconst middleWare = applyMiddleware(LocalStorageMiddleware(localStorageKey));\n\nconst store = createStore(rootReducer, initialState, middleWare);\n\nexport default store;","import { Middleware } from 'redux'\n\nexport const loadState = (key: string) => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const saveState = (key: string, state: object) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(key, serializedState);\n  } catch {\n    // ignore write errors\n  }\n};\n\nexport function LocalStorageMiddleware(key: string): Middleware {\n  return store => next => action => {\n    next(action);\n    saveState(key, store.getState());\n  }\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport './index.css'\nimport App from './App'\nimport store from './store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"project_type_card\":\"styles_project_type_card__usLlG\",\"schedule_media\":\"styles_schedule_media__1CzQm\"};"],"sourceRoot":""}