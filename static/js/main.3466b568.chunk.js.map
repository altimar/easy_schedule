{"version":3,"sources":["components/Label.tsx","components/Entry.tsx","components/EntryList.tsx","components/ListInput.tsx","components/Button.tsx","components/EntryModal.tsx","store/types.ts","App.tsx","store/actions.ts","store/reducers/entries.ts","store/reducers/index.ts","store/demo.ts","store/index.ts","store/localstorage.ts","index.tsx"],"names":["classNames","require","Label","props","classes","this","editable","className","title","onClick","onClose","Component","Entry","draggableId","entry_id","toString","index","provided","draggableProps","dragHandleProps","ref","innerRef","participants","map","participant","EntryList","onDragEnd","result","destination","source","onRearrange","droppableId","droppableProps","entries","entry","id","onSelect","placeholder","ListInput","onParticipantEdit","event","value","target","trim","key","newValues","state","values","setState","onChange","onParticipantClose","Object","assign","splice","type","onKeyPress","Button","size","children","EntryModal","onTitleChangeHandler","onParticipantsChange","onCloseClick","onCancel","onSaveClick","onSave","onDeleteClick","onDelete","ADD_ENTRY","UPDATE_ENTRY","DELETE_ENTRY","REARRANGE_ENTRY","mapDispatch","addEntry","updateEntry","deleteEntry","rearrangeEntry","connector","connect","schedule","onEntrySelect","i","length","is_modal","edited_entry","onModalCancel","onModalSave","onModalDelete","onAddButtonClick","newProps","initialState","combineReducers","action","newState","filter","currentEntry","currentIndex","female_first_names","male_first_names","last_names","getRandomLastName","Math","floor","random","getRandomScheduleEntry","min_participant","max_participant","j","push","entries_count","localStorageKey","serializedState","localStorage","getItem","JSON","parse","err","loadState","middleWare","applyMiddleware","store","next","stringify","setItem","saveState","getState","createStore","rootReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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ACA,QACA,UACA,WACA,QACA,UACA,SACA,SACA,WACA,QACA,SACA,UACA,OACA,OACA,QACA,WACA,QACA,QACA,SACA,YACA,MACA,UACA,SACA,MACA,UACA,WACA,WACA,QACA,QACA,SACA,OAGIC,EAAmB,CACvB,OACA,SACA,OACA,YACA,SACA,UACA,SACA,WACA,QACA,QACA,UACA,QACA,UACA,OACA,UACA,YACA,cACA,QACA,SACA,MACA,QACA,UACA,QACA,SACA,OACA,OACA,QACA,QACA,SACA,QACA,MACA,QACA,OACA,QACA,OACA,QACA,QACA,MACA,OACA,WACA,SACA,SACA,SACA,SACA,QACA,QACA,UACA,OACA,QACA,OACA,OACA,MACA,UACA,SACA,OACA,WACA,SACA,OACA,OACA,QACA,OACA,QACA,UACA,SACA,OACA,MACA,OACA,YACA,QACA,UACA,SACA,UACA,SACA,MACA,SACA,SACA,SACA,WAGIC,EAAa,CACjB,UACA,QACA,QACA,WACA,SACA,QACA,SACA,QACA,OACA,OACA,QACA,QACA,QACA,OACA,QACA,QACA,WACA,UACA,SACA,UACA,WACA,OACA,UACA,YACA,QACA,WACA,UACA,UACA,WACA,SACA,UACA,OACA,SACA,OACA,UACA,UACA,WACA,SACA,UACA,SACA,SACA,OACA,SACA,SACA,QACA,OACA,SACA,WACA,WACA,SACA,OACA,WACA,YACA,OACA,SACA,SACA,SACA,SACA,SACA,OACA,UACA,QACA,WACA,QACA,QACA,OACA,OACA,OACA,UACA,UACA,WACA,MACA,QACA,QACA,YACA,SACA,YACA,UACA,UACA,WACA,SACA,SACA,MACA,WACA,SACA,UACA,WACA,SACA,QACA,WACA,SACA,WACA,SACA,OACA,SACA,QACA,QACA,QACA,SACA,QACA,OACA,UACA,WACA,QACA,QACA,SACA,QACA,QACA,SACA,UACA,QACA,WACA,UACA,OACA,OACA,UACA,YACA,OACA,UACA,aACA,YACA,QACA,QACA,QACA,UACA,UACA,SACA,QACA,WACA,UACA,aACA,SACA,QACA,UACA,SACA,SACA,YACA,QACA,UACA,SACA,UACA,QACA,SACA,QACA,QACA,UACA,SACA,SACA,SAGF,SAASC,IACP,OAAOD,EAAWE,KAAKC,MAAMD,KAAKE,SAAWJ,EAAWjB,SAW1D,SAASsB,EAAuBrE,EAAY3B,EAAeiG,EAAyBC,GAMlF,IALA,IAAIxE,EAAmB,CACrBC,GAAIA,EACJ3B,MAAOA,EACPc,aAAc,IAEPqF,EAAI,EAAGA,EAAIN,KAAKC,MAAMD,KAAKE,UAAYG,EAAkBD,EAAkB,IAAMA,EAAiBE,IACzGzE,EAAMZ,aAAasF,KAAKD,EAAI,IAAM,EAV7BV,EAAmBI,KAAKC,MAAMD,KAAKE,SAAWL,EAAiBhB,SAAW,IAAMkB,IAJhFF,EAAiBG,KAAKC,MAAMD,KAAKE,SAAWL,EAAiBhB,SAAW,IAAMkB,KAgBrF,OAAOlE,ECpVT,IDuViC2E,EAAuBJ,EAAyBC,EErU1C9D,EDlBjCkE,EAAkB,gBAElBpB,EAAevC,OAAOC,QDqVKyD,ECrViB,EDqVMJ,ECrVH,EDqV4BC,ECrVzB,EDsV/C,CACL3B,SAAW,WAIT,IAHA,IAAIA,EAA0B,CAC5B9C,QAAS,IAEFgD,EAAI,EAAGA,EAAI4B,EAAe5B,IACjCF,EAAS9C,QAAQ2E,KAAKJ,EAAuBvB,EAAE,EAAG,UAAYA,EAAI,GAAGlE,WAAY0F,EAAiBC,IAEpG,OAAO3B,EAPE,KE5VU,SAACnC,GACxB,IACE,IAAMmE,EAAkBC,aAAaC,QAAQrE,GAC7C,GAAwB,OAApBmE,EACF,OAEF,OAAOG,KAAKC,MAAMJ,GAClB,MAAOK,GACP,QDHwDC,CAAUP,IAEhEQ,EAAaC,aCcoB3E,EDdmBkE,ECejD,SAAAU,GAAK,OAAI,SAAAC,GAAI,OAAI,SAAA7B,GACtB6B,EAAK7B,GAXgB,SAAChD,EAAaE,GACrC,IACE,IAAMiE,EAAkBG,KAAKQ,UAAU5E,GACvCkE,aAAaW,QAAQ/E,EAAKmE,GAC1B,WAQAa,CAAUhF,EAAK4E,EAAMK,iBDbVL,EAFDM,YAAYC,EAAarC,EAAc4B,GEJrDU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUV,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJW,SAASC,eAAe,W","file":"static/js/main.3466b568.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './Label.css';\nlet classNames = require(\"classnames\");\n\ninterface ILabelProps {\n  title: string\n  editable?: boolean\n  onClose?: () => void\n}\n\nexport default class Label extends Component<ILabelProps> {\n  constructor(props: ILabelProps) {\n    super(props)\n  }\n\n  render() {\n    const classes = classNames({\n      Label: true,\n      \"Label-editable\": this.props.editable\n    });\n    return (\n      <div className={classes}>\n        {this.props.title}\n        {this.props.editable &&\n          <button className=\"Label-close\" onClick={this.props.onClose}></button>\n        }\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport './Entry.css';\nimport Label from './Label';\nimport { Draggable } from 'react-beautiful-dnd'\n\ninterface IProps {\n  entry_id: number,\n  index: number,\n  title: string,\n  participants?: string[],\n  onClick?: () => void,\n}\n\nexport default class Entry extends Component<IProps> {\n  constructor(props: IProps) {\n    super(props)\n  }\n\n  render() {\n    return (\n      <Draggable draggableId={this.props.entry_id.toString()} index={this.props.index}>\n        {(provided) => (\n          <div className=\"Entry\" onClick={this.props.onClick} {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\n            <div className=\"Entry-title\">{this.props.title}</div>\n            <div className=\"Entry-participant-list\">\n              {\n                this.props.participants && this.props.participants.map(participant => {\n                  return <Label title={participant} key={\"participant_\" + participant} />;\n                })\n              }\n            </div>\n          </div>\n        )}\n      </Draggable>\n    )\n  }\n}","import React, { Component } from 'react';\nimport './EntryList.css';\nimport Entry from './Entry'\nimport { EntryType } from '../store/types'\nimport { DragDropContext, DropResult, Droppable } from 'react-beautiful-dnd'\n\ninterface IProps {\n  entries: EntryType[],\n  onSelect?: (id: number) => void,\n  onRearrange?: (id: number, index: number) => void\n}\n\nexport default class EntryList extends Component<IProps> {\n  onDragEnd = (result: DropResult) => {\n    const {destination, source, draggableId} = result; \n    if (!destination || !this.props.onRearrange) {\n      return;\n    }\n\n    if (destination.index === source.index) {\n      return;\n    }\n\n    this.props.onRearrange(+draggableId, destination.index)\n  }\n  render() {\n    return (\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        <Droppable droppableId=\"1\">\n          {provided => (\n            <div\n              className=\"EntryList\"\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n            >\n              {\n                this.props.entries && this.props.entries.map((entry, index) => {\n                  return <Entry\n                    entry_id={entry.id}\n                    index = {index}\n                    title={entry.title}\n                    key={\"entry_\" + entry.title}\n                    participants={entry.participants}\n                    onClick={() => this.props.onSelect && this.props.onSelect(entry.id)}\n                  />;\n                })\n              }\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n    )\n  }\n}","import React, { Component } from 'react';\nimport './ListInput.css';\nimport Label from './Label';\n\ninterface IListInputProps {\n  values: string[];\n  onChange?: (values: string[]) => void;\n}\n\ninterface IListInputState {\n  values: string[]\n}\n\nexport default class ListInput extends Component<IListInputProps, IListInputState> {\n  constructor(props: IListInputProps) {\n    super(props)\n    this.state = {\n      values: Object.assign([], this.props.values)\n    }\n  }\n\n  onParticipantEdit = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    let value = (event.target as HTMLInputElement).value.trim();\n    if (event.key === 'Enter' && value !== '') {\n      let newValues = [...this.state.values, value];\n      this.setState({ values: newValues });\n      this.props.onChange && this.props.onChange(newValues);\n      (event.target as HTMLInputElement).value = '';\n    }\n  }\n\n  onParticipantClose = (index: number) => {\n    let newValues = Object.assign([], this.state.values);\n    newValues.splice(index, 1);\n    this.setState({ values: newValues });\n    this.props.onChange && this.props.onChange(newValues);\n  }\n\n  render() {\n    return (\n      <div className=\"ListInput\">\n        {\n          this.state.values && this.state.values.map((value, index) => {\n            return <Label\n              title={value}\n              key={\"value_\" + value}\n              editable={true}\n              onClose={() => this.onParticipantClose(index)}\n            />;\n          })\n        }\n        <input type=\"text\" onKeyPress={this.onParticipantEdit} />\n      </div>\n    )\n  }\n}","import React, {Component} from 'react';\nimport './Button.css';\n\ntype ButtonTypes = \"delete\" | \"ok\" | \"cancel\";\ntype ButtonSizes = \"big\";\n\ninterface IProps {\n  type?: ButtonTypes\n  size?: ButtonSizes,\n  onClick?: () => void\n}\n\nexport default class Button extends Component<IProps> {\n  render() {\n    let classes = 'Button';\n    if (this.props.type) {\n      classes += ' Button-'+this.props.type;\n    }\n    if (this.props.size) {\n      classes += ' Button-'+this.props.size;\n    }\n    return (\n      <button className={classes} onClick={this.props.onClick}>\n        {this.props.children}\n      </button>\n    )\n  }\n}","import React, { Component, ChangeEvent } from 'react';\nimport './EntryModal.css';\nimport { EntryType } from '../store/types';\nimport ListInput from './ListInput';\nimport Button from './Button';\n\ntype EntryModalProps = {\n  entry?: EntryType,\n  onCancel?: () => void,\n  onSave?: (entry: EntryType) => void,\n  onDelete?: (entry: EntryType) => void,\n}\n\nexport default class EntryModal extends Component<EntryModalProps, EntryType> {\n  constructor(props: EntryModalProps) {\n    super(props)\n    this.state = this.props.entry ? Object.assign({}, this.props.entry) : { id: 0, title: '', participants: [] };\n  }\n\n  onTitleChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\n    this.setState({ title: event.target.value });\n  }\n\n  onParticipantsChange = (values: string[]) => {\n    this.setState({ participants: values });\n  }\n\n  onCloseClick = () => {\n    this.props.onCancel && this.props.onCancel();\n  }\n\n  onSaveClick = () => {\n    this.props.onSave && this.props.onSave(this.state);\n  }\n\n  onDeleteClick = () => {\n    this.props.onDelete && this.props.onDelete(this.state);\n  }\n\n  render() {\n    return (\n      <div className=\"EntryModal\">\n        <div className=\"EntryModal-title\">\n          {\n            this.state.id === 0 ? 'Добавить элемент' : 'Редактировать элемент'\n          }\n          <button className=\"EntryModal-close\" onClick={this.onCloseClick}/>\n        </div>\n        <div className=\"EntryModal-body\">\n          <div className=\"EntryModal-row\">\n            <label>Название: </label><input type=\"text\" value={this.state.title} onChange={this.onTitleChangeHandler} />\n          </div>\n          <div className=\"EntryModal-row\">\n            <label>Участники: </label><ListInput values={this.state.participants} onChange={this.onParticipantsChange}/>\n          </div>\n        </div>\n        <div className=\"EntryModal-footer\">\n          <Button onClick={this.onSaveClick} type=\"ok\">Save</Button>\n          <Button onClick={this.props.onCancel} type=\"cancel\">Close</Button>\n          {\n            this.state.id !== 0 && <Button onClick={this.onDeleteClick} type=\"delete\">Delete</Button>\n          }\n        </div>\n      </div>\n    )\n  }\n}","export const ADD_ENTRY = 'ADD_ENTRY';\nexport const UPDATE_ENTRY = 'UPDATE_ENTRY';\nexport const DELETE_ENTRY = 'DELETE_ENTRY';\nexport const REARRANGE_ENTRY = 'REARRANGE_ENTRY';\n\nexport interface EntryAddAction {\n  type: typeof ADD_ENTRY\n  entry: EntryType\n}\n\nexport interface EntryUpdateAction {\n  type: typeof UPDATE_ENTRY\n  entry: EntryType\n}\n\nexport interface EntryDeleteAction {\n  type: typeof DELETE_ENTRY\n  id: number\n}\n\nexport interface EntryRearrangeAction {\n  type: typeof REARRANGE_ENTRY\n  id: number\n  index: number\n}\n\nexport type EntriesActionTypes = EntryAddAction | EntryUpdateAction | EntryDeleteAction | EntryRearrangeAction;\n\nexport interface EntryType {\n  id: number\n  title: string\n  participants: string[]\n}\n\nexport interface EntryListType {\n  entries: EntryType[],\n}\n\nexport interface RootState {\n  schedule: EntryListType\n}","import React, { Component } from 'react';\nimport './App.css';\nimport EntryList from './components/EntryList';\nimport EntryModal from './components/EntryModal';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { RootState, EntryListType, EntryType } from './store/types'\nimport { addEntryAction, updateEntryAction, deleteEntryAction, rearrangeEntryAction } from './store/actions'\nimport Button from './components/Button'\n\nconst mapState = (state: RootState) => ({\n  schedule: state.schedule,\n});\n\nconst mapDispatch = {\n  addEntry: addEntryAction,\n  updateEntry: updateEntryAction,\n  deleteEntry: deleteEntryAction,\n  rearrangeEntry: rearrangeEntryAction,\n}\n\nconst connector = connect(mapState, mapDispatch)\n\ntype Props = ConnectedProps<typeof connector>\n\ninterface IState {\n  is_modal: boolean;\n  schedule: EntryListType;\n  edited_entry: EntryType;\n}\n\nfunction getEmptyEntry(): EntryType {\n  return {\n    id: 0,\n    title: '',\n    participants: [],\n  }\n}\n\nclass App extends Component<Props, IState> {\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      is_modal: false,\n      schedule: { ...this.props.schedule },\n      edited_entry: getEmptyEntry()\n    };\n  }\n\n  componentWillReceiveProps(newProps: Props): void {\n    this.setState({\n      schedule: { ...newProps.schedule },\n    });\n  }\n\n  onEntrySelect = (id: number) => {\n    for (let i = 0; i < this.state.schedule.entries.length; i++) {\n      if (this.state.schedule.entries[i].id === id) {\n        this.setState({\n          is_modal: true,\n          edited_entry: { ...this.state.schedule.entries[i] },\n        })\n      }\n    }\n  }\n\n  onModalCancel = () => {\n    this.setState({ is_modal: false });\n  }\n\n  onModalSave = (entry: EntryType) => {\n    if (entry.title.length > 0) {\n      this.setState({ is_modal: false });\n      if (entry.id === 0) {\n        this.props.addEntry(entry);\n      } else {\n        this.props.updateEntry(entry);\n      }\n    }\n  }\n\n  onModalDelete = (entry: EntryType) => {\n    this.setState({ is_modal: false });\n    this.props.deleteEntry(entry);\n  }\n\n  onAddButtonClick = () => {\n    this.setState({\n      is_modal: true,\n      edited_entry: getEmptyEntry(),\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Easy Schedule</h1>\n        </header>\n        <Button type=\"ok\" size=\"big\" onClick={this.onAddButtonClick}>Add entry</Button>\n        <EntryList\n        entries={this.state.schedule.entries}\n        onSelect={this.onEntrySelect}\n        onRearrange={this.props.rearrangeEntry}\n        />\n        {\n          this.state.is_modal &&\n          <EntryModal key={this.state.edited_entry.id}\n            entry={this.state.edited_entry}\n            onCancel={this.onModalCancel}\n            onSave={this.onModalSave}\n            onDelete={this.onModalDelete}\n          />\n        }\n      </div>\n    );\n  }\n}\n\nexport default connector(App);\n","import {\n  ADD_ENTRY, UPDATE_ENTRY, DELETE_ENTRY, REARRANGE_ENTRY,\n  EntryAddAction, EntryUpdateAction, EntryDeleteAction, EntryRearrangeAction,\n  EntryType,\n} from './types';\n\nexport function addEntryAction(entry: EntryType): EntryAddAction {\n  return {\n    type: ADD_ENTRY,\n    entry: entry,\n  }\n}\n\nexport function updateEntryAction(entry: EntryType): EntryUpdateAction {\n  return {\n    type: UPDATE_ENTRY,\n    entry: entry,\n  }\n}\n\nexport function deleteEntryAction(entry: EntryType): EntryDeleteAction {\n  return {\n    type: DELETE_ENTRY,\n    id: entry.id,\n  }\n}\n\nexport function rearrangeEntryAction(id: number, index: number): EntryRearrangeAction {\n  return {\n    type: REARRANGE_ENTRY,\n    id: id,\n    index: index,\n  }\n}","import {\n  EntryListType,\n  EntriesActionTypes,\n  EntryType,\n  ADD_ENTRY,\n  UPDATE_ENTRY,\n  DELETE_ENTRY,\n  REARRANGE_ENTRY,\n} from '../types';\n\nconst initialState: EntryListType = {\n  entries: [],\n}\n\nexport function entries(state = initialState, action: EntriesActionTypes) {\n  switch (action.type) {\n    case ADD_ENTRY:\n      return {\n        entries: [...state.entries, action.entry]\n      }\n    case UPDATE_ENTRY:\n      let newState = {...state};\n      for(let i = 0; i < newState.entries.length; i++) {\n        if (newState.entries[i].id === action.entry.id) {\n          newState.entries[i] = {...action.entry}\n        }\n      }\n      return newState;\n    case DELETE_ENTRY:\n      state.entries = state.entries.filter((value) => value.id !== action.id );\n      return {...state};\n    case REARRANGE_ENTRY:\n      let currentIndex = -1;\n      let currentEntry: EntryType;\n      for(let i = 0; i < state.entries.length; i++) {\n        if (state.entries[i].id === action.id) {\n          currentIndex = i;\n          break;\n        }\n      }\n      if (currentIndex === -1) {\n        return state;\n      }\n\n      [currentEntry] = state.entries.splice(currentIndex, 1);\n      state.entries.splice(action.index, 0, currentEntry);\n      return {...state};\n    default:\n      return state\n  }\n}","import { combineReducers } from 'redux'\nimport { entries } from './entries'\n\nexport default combineReducers({\n  schedule: entries,\n})","import { EntryListType, EntryType, RootState } from './types'\n\nconst female_first_names = [\n  'Abigail',\n  'Alexandra',\n  'Alison',\n  'Amanda',\n  'Amelia',\n  'Amy',\n  'Andrea',\n  'Angela',\n  'Anna',\n  'Anne',\n  'Audrey',\n  'Ava',\n  'Bella',\n  'Bernadette',\n  'Carol',\n  'Caroline',\n  'Carolyn',\n  'Chloe',\n  'Claire',\n  'Deirdre',\n  'Diana',\n  'Diane',\n  'Donna',\n  'Dorothy',\n  'Elizabeth',\n  'Ella',\n  'Emily',\n  'Emma',\n  'Faith',\n  'Felicity',\n  'Fiona',\n  'Gabrielle',\n  'Grace',\n  'Hannah',\n  'Heather',\n  'Irene',\n  'Jan',\n  'Jane',\n  'Jasmine',\n  'Jennifer',\n  'Jessica',\n  'Joan',\n  'Joanne',\n  'Julia',\n  'Karen',\n  'Katherine',\n  'Kimberly',\n  'Kylie',\n  'Lauren',\n  'Leah',\n  'Lillian',\n  'Lily',\n  'Lisa',\n  'Madeleine',\n  'Maria',\n  'Mary',\n  'Megan',\n  'Melanie',\n  'Michelle',\n  'Molly',\n  'Natalie',\n  'Nicola',\n  'Olivia',\n  'Penelope',\n  'Pippa',\n  'Rachel',\n  'Rebecca',\n  'Rose',\n  'Ruth',\n  'Sally',\n  'Samantha',\n  'Sarah',\n  'Sonia',\n  'Sophie',\n  'Stephanie',\n  'Sue',\n  'Theresa',\n  'Tracey',\n  'Una',\n  'Vanessa',\n  'Victoria',\n  'Virginia',\n  'Wanda',\n  'Wendy',\n  'Yvonne',\n  'Zoe'\n];\n\nconst male_first_names = [\n  'Adam',\n  'Adrian',\n  'Alan',\n  'Alexander',\n  'Andrew',\n  'Anthony',\n  'Austin',\n  'Benjamin',\n  'Blake',\n  'Boris',\n  'Brandon',\n  'Brian',\n  'Cameron',\n  'Carl',\n  'Charles',\n  'Christian',\n  'Christopher',\n  'Colin',\n  'Connor',\n  'Dan',\n  'David',\n  'Dominic',\n  'Dylan',\n  'Edward',\n  'Eric',\n  'Evan',\n  'Frank',\n  'Gavin',\n  'Gordon',\n  'Harry',\n  'Ian',\n  'Isaac',\n  'Jack',\n  'Jacob',\n  'Jake',\n  'James',\n  'Jason',\n  'Joe',\n  'John',\n  'Jonathan',\n  'Joseph',\n  'Joshua',\n  'Julian',\n  'Justin',\n  'Keith',\n  'Kevin',\n  'Leonard',\n  'Liam',\n  'Lucas',\n  'Luke',\n  'Matt',\n  'Max',\n  'Michael',\n  'Nathan',\n  'Neil',\n  'Nicholas',\n  'Oliver',\n  'Owen',\n  'Paul',\n  'Peter',\n  'Phil',\n  'Piers',\n  'Richard',\n  'Robert',\n  'Ryan',\n  'Sam',\n  'Sean',\n  'Sebastian',\n  'Simon',\n  'Stephen',\n  'Steven',\n  'Stewart',\n  'Thomas',\n  'Tim',\n  'Trevor',\n  'Victor',\n  'Warren',\n  'William'\n];\n\nconst last_names = [\n  'Abraham',\n  'Allan',\n  'Alsop',\n  'Anderson',\n  'Arnold',\n  'Avery',\n  'Bailey',\n  'Baker',\n  'Ball',\n  'Bell',\n  'Berry',\n  'Black',\n  'Blake',\n  'Bond',\n  'Bower',\n  'Brown',\n  'Buckland',\n  'Burgess',\n  'Butler',\n  'Cameron',\n  'Campbell',\n  'Carr',\n  'Chapman',\n  'Churchill',\n  'Clark',\n  'Clarkson',\n  'Coleman',\n  'Cornish',\n  'Davidson',\n  'Davies',\n  'Dickens',\n  'Dowd',\n  'Duncan',\n  'Dyer',\n  'Edmunds',\n  'Ellison',\n  'Ferguson',\n  'Fisher',\n  'Forsyth',\n  'Fraser',\n  'Gibson',\n  'Gill',\n  'Glover',\n  'Graham',\n  'Grant',\n  'Gray',\n  'Greene',\n  'Hamilton',\n  'Hardacre',\n  'Harris',\n  'Hart',\n  'Hemmings',\n  'Henderson',\n  'Hill',\n  'Hodges',\n  'Howard',\n  'Hudson',\n  'Hughes',\n  'Hunter',\n  'Ince',\n  'Jackson',\n  'James',\n  'Johnston',\n  'Jones',\n  'Kelly',\n  'Kerr',\n  'King',\n  'Knox',\n  'Lambert',\n  'Langdon',\n  'Lawrence',\n  'Lee',\n  'Lewis',\n  'Lyman',\n  'MacDonald',\n  'Mackay',\n  'Mackenzie',\n  'MacLeod',\n  'Manning',\n  'Marshall',\n  'Martin',\n  'Mathis',\n  'May',\n  'McDonald',\n  'McLean',\n  'McGrath',\n  'Metcalfe',\n  'Miller',\n  'Mills',\n  'Mitchell',\n  'Morgan',\n  'Morrison',\n  'Murray',\n  'Nash',\n  'Newman',\n  'Nolan',\n  'North',\n  'Ogden',\n  'Oliver',\n  'Paige',\n  'Parr',\n  'Parsons',\n  'Paterson',\n  'Payne',\n  'Peake',\n  'Peters',\n  'Piper',\n  'Poole',\n  'Powell',\n  'Pullman',\n  'Quinn',\n  'Rampling',\n  'Randall',\n  'Rees',\n  'Reid',\n  'Roberts',\n  'Robertson',\n  'Ross',\n  'Russell',\n  'Rutherford',\n  'Sanderson',\n  'Scott',\n  'Sharp',\n  'Short',\n  'Simpson',\n  'Skinner',\n  'Slater',\n  'Smith',\n  'Springer',\n  'Stewart',\n  'Sutherland',\n  'Taylor',\n  'Terry',\n  'Thomson',\n  'Tucker',\n  'Turner',\n  'Underwood',\n  'Vance',\n  'Vaughan',\n  'Walker',\n  'Wallace',\n  'Walsh',\n  'Watson',\n  'Welch',\n  'White',\n  'Wilkins',\n  'Wilson',\n  'Wright',\n  'Young'\n];\n\nfunction getRandomLastName(): string {\n  return last_names[Math.floor(Math.random() * last_names.length)];\n}\n\nfunction getMaleName(): string {\n  return male_first_names[Math.floor(Math.random() * male_first_names.length)] + ' ' + getRandomLastName();\n}\n\nfunction getFemaleName(): string {\n  return female_first_names[Math.floor(Math.random() * male_first_names.length)] + ' ' + getRandomLastName();\n}\n\nfunction getRandomScheduleEntry(id: number, title: string, min_participant: number, max_participant: number): EntryType {\n  let entry: EntryType = {\n    id: id,\n    title: title,\n    participants: [],\n  };\n  for (let j = 0; j < Math.floor(Math.random() * (max_participant - min_participant + 1)) + min_participant; j++) {\n    entry.participants.push(j % 2 === 0 ? getFemaleName() : getMaleName());\n  }\n  return entry;\n}\n\nexport default function generate(entries_count: number, min_participant: number, max_participant: number): RootState {\n  return {\n    schedule: ((): EntryListType => {\n      let schedule: EntryListType = {\n        entries: [],\n      };\n      for (let i = 0; i < entries_count; i++) {\n        schedule.entries.push(getRandomScheduleEntry(i+1, 'Dance ' + (i + 1).toString(), min_participant, max_participant));\n      }\n      return schedule;\n    })(),\n  };\n}","import { createStore, applyMiddleware } from 'redux'\nimport rootReducer from './reducers'\nimport data_generator from './demo';\nimport { loadState, LocalStorageMiddleware } from './localstorage'\n\nconst localStorageKey = 'easy-schedule';\n\nconst initialState = Object.assign(data_generator(5, 2, 6), loadState(localStorageKey))\n\nconst middleWare = applyMiddleware(LocalStorageMiddleware(localStorageKey));\n\nconst store = createStore(rootReducer, initialState, middleWare);\n\nexport default store;","import { Middleware } from 'redux'\n\nexport const loadState = (key: string) => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const saveState = (key: string, state: object) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(key, serializedState);\n  } catch {\n    // ignore write errors\n  }\n};\n\nexport function LocalStorageMiddleware(key: string): Middleware {\n  return store => next => action => {\n    next(action);\n    saveState(key, store.getState());\n  }\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport './index.css'\nimport App from './App'\nimport store from './store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}